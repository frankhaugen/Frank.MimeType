using System.Collections;

namespace Frank.MimeTypes;

/// <summary>
/// A collection of MimeType objects that can be accessed by index extension.
/// </summary>
public class MimeTypeCollection : IEnumerable<MimeType>
{
    /// <summary>
    /// Returns the first MimeType that matches the extension.
    /// </summary>
    /// <param name="extension"></param>
    public MimeType this[string extension] => this.First(x => x.Extension.ToLower().Replace(".", "") == extension.ToLower().Replace(".", ""));
    
    public readonly static MimeType _123 = new("Lotus 1-2-3", "application/vnd.lotus-1-2-3", ".123", "IANA: Lotus 1-2-3");
    public readonly static MimeType _3dml = new("In3D - 3DML", "text/vnd.in3d.3dml", ".3dml", "IANA: In3D");
    public readonly static MimeType _3g2 = new("3GP2", "video/3gpp2", ".3g2", "Wikipedia: 3G2");
    public readonly static MimeType _3gp = new("3GP", "video/3gpp", ".3gp", "Wikipedia: 3GP");
    public readonly static MimeType _7z = new("7-Zip", "application/x-7z-compressed", ".7z", "Wikipedia: 7-Zip");
    public readonly static MimeType Abw = new("AbiWord", "application/x-abiword", ".abw", "Wikipedia: AbiWord");
    public readonly static MimeType Ac = new("Attribute Certificate", "application/pkix-attr-cert", ".ac", "RFC 5877");
    public readonly static MimeType Acc = new("Active Content Compression", "application/vnd.americandynamics.acc", ".acc", "IANA: Active Content Compression");
    public readonly static MimeType Ace = new("Ace Archive", "application/x-ace-compressed", ".ace", "Wikipedia: ACE");
    public readonly static MimeType Acu = new("ACU Cobol", "application/vnd.acucobol", ".acu", "IANA: ACU Cobol");
    public readonly static MimeType Adp = new("Adaptive differential pulse-code modulation", "audio/adpcm", ".adp", "Wikipedia: ADPCM");
    public readonly static MimeType Aep = new("Audiograph", "application/vnd.audiograph", ".aep", "IANA: Audiograph");
    public readonly static MimeType Afp = new("MO:DCA-P", "application/vnd.ibm.modcap", ".afp", "IANA: MO:DCA-P");
    public readonly static MimeType Ahead = new("Ahead AIR Application", "application/vnd.ahead.space", ".ahead", "IANA: Ahead AIR Application");
    public readonly static MimeType Ai = new("PostScript", "application/postscript", ".ai", "Wikipedia: PostScript");
    public readonly static MimeType Aif = new("Audio Interchange File Format", "audio/x-aiff", ".aif", "Wikipedia: Audio Interchange File Format");
    public readonly static MimeType Air = new("Adobe AIR Application", "application/vnd.adobe.air-application-installer-package+zip", ".air", "Building AIR Applications");
    public readonly static MimeType Ait = new("Digital Video Broadcasting", "application/vnd.dvb.ait", ".ait", "IANA: Digital Video Broadcasting");
    public readonly static MimeType Ami = new("AmigaDE", "application/vnd.amiga.ami", ".ami", "IANA: Amiga");
    public readonly static MimeType Apk = new("Android Package Archive", "application/vnd.android.package-archive", ".apk", "Wikipedia: APK File Format");
    public readonly static MimeType Application = new("Microsoft ClickOnce", "application/x-ms-application", ".application", "Wikipedia: ClickOnce");
    public readonly static MimeType Apr = new("Lotus Approach", "application/vnd.lotus-approach", ".apr", "IANA: Lotus Approach");
    public readonly static MimeType Asf = new("Microsoft Advanced Systems Format (ASF)", "video/x-ms-asf", ".asf", "Wikipedia: Advanced Systems Format (ASF)");
    public readonly static MimeType Aso = new("Simply Accounting", "application/vnd.accpac.simply.aso", ".aso", "IANA: Simply Accounting");
    public readonly static MimeType Atc = new("ACU Cobol", "application/vnd.acucorp", ".atc", "IANA: ACU Cobol");
    public readonly static MimeType Atomxml = new("Atom Syndication Format", "application/atom+xml", ".atom, .xml", "RFC 4287");
    public readonly static MimeType Atomcat = new("Atom Publishing Protocol", "application/atomcat+xml", ".atomcat", "RFC 5023");
    public readonly static MimeType Atomsvc = new("Atom Publishing Protocol Service Document", "application/atomsvc+xml", ".atomsvc", "RFC 5023");
    public readonly static MimeType Atx = new("Antix Game Player", "application/vnd.antix.game-component", ".atx", "IANA: Antix Game Component");
    public readonly static MimeType Au = new("Sun Audio - Au file format", "audio/basic", ".au", "Wikipedia: Sun audio");
    public readonly static MimeType Avi = new("Audio Video Interleave (AVI)", "video/x-msvideo", ".avi", "Wikipedia: AVI");
    public readonly static MimeType Aw = new("Applixware", "application/applixware", ".aw", "Vistasource");
    public readonly static MimeType Azf = new("AirZip FileSECURE", "application/vnd.airzip.filesecure.azf", ".azf", "IANA: AirZip");
    public readonly static MimeType Azs = new("AirZip FileSECURE", "application/vnd.airzip.filesecure.azs", ".azs", "IANA: AirZip");
    public readonly static MimeType Azw = new("Amazon Kindle eBook format", "application/vnd.amazon.ebook", ".azw", "Kindle Direct Publishing");
    public readonly static MimeType Bcpio = new("Binary CPIO Archive", "application/x-bcpio", ".bcpio", "Wikipedia: cpio");
    public readonly static MimeType Bdf = new("Glyph Bitmap Distribution Format", "application/x-font-bdf", ".bdf", "Wikipedia: Glyph Bitmap Distribution Format");
    public readonly static MimeType Bdm = new("SyncML - Device Management", "application/vnd.syncml.dm+wbxml", ".bdm", "IANA: SyncML");
    public readonly static MimeType Bed = new("RealVNC", "application/vnd.realvnc.bed", ".bed", "IANA: RealVNC");
    public readonly static MimeType Bh2 = new("Fujitsu Oasys", "application/vnd.fujitsu.oasysprs", ".bh2", "IANA: Fujitsu Oasys");
    public readonly static MimeType Bin = new("Binary Data", "application/octet-stream", ".bin", "");
    public readonly static MimeType Bmi = new("BMI Drawing Data Interchange", "application/vnd.bmi", ".bmi", "IANA: BMI");
    public readonly static MimeType Bmp = new("Bitmap Image File", "image/bmp", ".bmp", "Wikipedia: BMP File Format");
    public readonly static MimeType Box = new("Preview Systems ZipLock/VBox", "application/vnd.previewsystems.box", ".box", "IANA: Preview Systems ZipLock/Vbox");
    public readonly static MimeType Btif = new("BTIF", "image/prs.btif", ".btif", "IANA: BTIF");
    public readonly static MimeType Bz = new("Bzip Archive", "application/x-bzip", ".bz", "Wikipedia: Bzip");
    public readonly static MimeType Bz2 = new("Bzip2 Archive", "application/x-bzip2", ".bz2", "Wikipedia: Bzip");
    public readonly static MimeType C = new("C Source File", "text/x-c", ".c", "Wikipedia: C Programming Language");
    public readonly static MimeType C11amc = new("ClueTrust CartoMobile - Config", "application/vnd.cluetrust.cartomobile-config", ".c11amc", "IANA: CartoMobile");
    public readonly static MimeType C11amz = new("ClueTrust CartoMobile - Config Package", "application/vnd.cluetrust.cartomobile-config-pkg", ".c11amz", "IANA: CartoMobile");
    public readonly static MimeType C4g = new("Clonk Game", "application/vnd.clonk.c4group", ".c4g", "IANA: Clonk");
    public readonly static MimeType Cab = new("Microsoft Cabinet File", "application/vnd.ms-cab-compressed", ".cab", "IANA: MS Cabinet File");
    public readonly static MimeType Car = new("CURL Applet", "application/vnd.curl.car", ".car", "IANA: CURL Applet");
    public readonly static MimeType Cat = new("Microsoft Trust UI Provider - Security Catalog", "application/vnd.ms-pki.seccat", ".cat", "IANA: MS Trust UI Provider");
    public readonly static MimeType Ccxml = new("Voice Browser Call Control", "application/ccxml+xml,", ".ccxml", "Voice Browser Call Control: CCXML Version 1.0");
    public readonly static MimeType Cdbcmsg = new("CIM Database", "application/vnd.contact.cmsg", ".cdbcmsg", "IANA: CIM Database");
    public readonly static MimeType Cdkey = new("MediaRemote", "application/vnd.mediastation.cdkey", ".cdkey", "IANA: MediaRemote");
    public readonly static MimeType Cdmia = new("Cloud Data Management Interface (CDMI) - Capability", "application/cdmi-capability", ".cdmia", "RFC 6208");
    public readonly static MimeType Cdmic = new("Cloud Data Management Interface (CDMI) - Contaimer", "application/cdmi-container", ".cdmic", "RFC 6209");
    public readonly static MimeType Cdmid = new("Cloud Data Management Interface (CDMI) - Domain", "application/cdmi-domain", ".cdmid", "RFC 6210");
    public readonly static MimeType Cdmio = new("Cloud Data Management Interface (CDMI) - Object", "application/cdmi-object", ".cdmio", "RFC 6211");
    public readonly static MimeType Cdmiq = new("Cloud Data Management Interface (CDMI) - Queue", "application/cdmi-queue", ".cdmiq", "RFC 6212");
    public readonly static MimeType Cdx = new("ChemDraw eXchange file", "chemical/x-cdx", ".cdx", "ChemDraw eXchange file");
    public readonly static MimeType Cdxml = new("CambridgeSoft Chem Draw", "application/vnd.chemdraw+xml", ".cdxml", "IANA: Chem Draw");
    public readonly static MimeType Cdy = new("Interactive Geometry Software Cinderella", "application/vnd.cinderella", ".cdy", "IANA: Cinderella");
    public readonly static MimeType Cer = new("Internet Public Key Infrastructure - Certificate", "application/pkix-cert", ".cer", "RFC 2585");
    public readonly static MimeType Cgm = new("Computer Graphics Metafile", "image/cgm", ".cgm", "Wikipedia: Computer Graphics Metafile");
    public readonly static MimeType Chat = new("pIRCh", "application/x-chat", ".chat", "Wikipedia: pIRCh");
    public readonly static MimeType Chm = new("Microsoft Html Help File", "application/vnd.ms-htmlhelp", ".chm", "IANA:MS Html Help File");
    public readonly static MimeType Chrt = new("KDE KOffice Office Suite - KChart", "application/vnd.kde.kchart", ".chrt", "IANA: KDE KOffice Office Suite");
    public readonly static MimeType Cif = new("Crystallographic Interchange Format", "chemical/x-cif", ".cif", "Crystallographic Interchange Format");
    public readonly static MimeType Cii = new("ANSER-WEB Terminal Client - Certificate Issue", "application/vnd.anser-web-certificate-issue-initiation", ".cii", "IANA: ANSWER-WEB");
    public readonly static MimeType Cil = new("Microsoft Artgalry", "application/vnd.ms-artgalry", ".cil", "IANA: MS Artgalry");
    public readonly static MimeType Cla = new("Claymore Data Files", "application/vnd.claymore", ".cla", "IANA: Claymore");
    public readonly static MimeType Class = new("Java Bytecode File", "application/java-vm", ".class", "Wikipedia: Java Bytecode");
    public readonly static MimeType Clkk = new("CrickSoftware - Clicker - Keyboard", "application/vnd.crick.clicker.keyboard", ".clkk", "IANA: Clicker");
    public readonly static MimeType Clkp = new("CrickSoftware - Clicker - Palette", "application/vnd.crick.clicker.palette", ".clkp", "IANA: Clicker");
    public readonly static MimeType Clkt = new("CrickSoftware - Clicker - Template", "application/vnd.crick.clicker.template", ".clkt", "IANA: Clicker");
    public readonly static MimeType Clkw = new("CrickSoftware - Clicker - Wordbank", "application/vnd.crick.clicker.wordbank", ".clkw", "IANA: Clicker");
    public readonly static MimeType Clkx = new("CrickSoftware - Clicker", "application/vnd.crick.clicker", ".clkx", "IANA: Clicker");
    public readonly static MimeType Clp = new("Microsoft Clipboard Clip", "application/x-msclip", ".clp", "Wikipedia: Clipboard");
    public readonly static MimeType Cmc = new("CosmoCaller", "application/vnd.cosmocaller", ".cmc", "IANA: CosmoCaller");
    public readonly static MimeType Cmdf = new("CrystalMaker Data Format", "chemical/x-cmdf", ".cmdf", "CrystalMaker Data Format");
    public readonly static MimeType Cml = new("Chemical Markup Language", "chemical/x-cml", ".cml", "Wikipedia: Chemical Markup Language");
    public readonly static MimeType Cmp = new("CustomMenu", "application/vnd.yellowriver-custom-menu", ".cmp", "IANA: CustomMenu");
    public readonly static MimeType Cmx = new("Corel Metafile Exchange (CMX)", "image/x-cmx", ".cmx", "Wikipedia: CorelDRAW");
    public readonly static MimeType Cod = new("Blackberry COD File", "application/vnd.rim.cod", ".cod", "");
    public readonly static MimeType Cpio = new("CPIO Archive", "application/x-cpio", ".cpio", "Wikipedia: cpio");
    public readonly static MimeType Cpt = new("Compact Pro", "application/mac-compactpro", ".cpt", "Compact Pro");
    public readonly static MimeType Crd = new("Microsoft Information Card", "application/x-mscardfile", ".crd", "Wikipedia: Information Card");
    public readonly static MimeType Crl = new("Internet Public Key Infrastructure - Certificate Revocation Lists", "application/pkix-crl", ".crl", "RFC 2585");
    public readonly static MimeType Cryptonote = new("CryptoNote", "application/vnd.rig.cryptonote", ".cryptonote", "IANA: CryptoNote");
    public readonly static MimeType Csh = new("C Shell Script", "application/x-csh", ".csh", "Wikipedia: C Shell");
    public readonly static MimeType Csml = new("Chemical Style Markup Language", "chemical/x-csml", ".csml", "Wikipedia: Chemical Style Markup Language");
    public readonly static MimeType Csp = new("Sixth Floor Media - CommonSpace", "application/vnd.commonspace", ".csp", "IANA: CommonSpace");
    public readonly static MimeType Css = new("Cascading Style Sheets (CSS)", "text/css", ".css", "Wikipedia: CSS");
    public readonly static MimeType Csv = new("Comma-Seperated Values", "text/csv", ".csv", "Wikipedia: CSV");
    public readonly static MimeType Cu = new("CU-SeeMe", "application/cu-seeme", ".cu", "White Pine");
    public readonly static MimeType Curl = new("Curl - Applet", "text/vnd.curl", ".curl", "Curl Applet");
    public readonly static MimeType Cww = new("CU-Writer", "application/prs.cww", ".cww", "");
    public readonly static MimeType Dae = new("COLLADA", "model/vnd.collada+xml", ".dae", "IANA: COLLADA");
    public readonly static MimeType Daf = new("Mobius Management Systems - UniversalArchive", "application/vnd.mobius.daf", ".daf", "IANA: Mobius Management Systems");
    public readonly static MimeType Davmount = new("Web Distributed Authoring and Versioning", "application/davmount+xml", ".davmount", "RFC 4918");
    public readonly static MimeType Dcurl = new("Curl - Detached Applet", "text/vnd.curl.dcurl", ".dcurl", "Curl Detached Applet");
    public readonly static MimeType Dd2 = new("OMA Download Agents", "application/vnd.oma.dd2+xml", ".dd2", "IANA: OMA Download Agents");
    public readonly static MimeType Ddd = new("Fujitsu - Xerox 2D CAD Data", "application/vnd.fujixerox.ddd", ".ddd", "IANA: Fujitsu DDD");
    public readonly static MimeType Deb = new("Debian Package", "application/x-debian-package", ".deb", "Wikipedia: Debian Package");
    public readonly static MimeType Der = new("X.509 Certificate", "application/x-x509-ca-cert", ".der", "Wikipedia: X.509");
    public readonly static MimeType Dfac = new("DreamFactory", "application/vnd.dreamfactory", ".dfac", "IANA: DreamFactory");
    public readonly static MimeType Dir = new("Adobe Shockwave Player", "application/x-director", ".dir", "Wikipedia: Adobe Shockwave Player");
    public readonly static MimeType Dis = new("Mobius Management Systems - Distribution Database", "application/vnd.mobius.dis", ".dis", "IANA: Mobius Management Systems");
    public readonly static MimeType Djvu = new("DjVu", "image/vnd.djvu", ".djvu", "Wikipedia: DjVu");
    public readonly static MimeType Dmg = new("Apple Disk Image", "application/x-apple-diskimage", ".dmg", "Apple Disk Image");
    public readonly static MimeType Dna = new("New Moon Liftoff/DNA", "application/vnd.dna", ".dna", "IANA: New Moon Liftoff/DNA");
    public readonly static MimeType Doc = new("Microsoft Word", "application/msword", ".doc", "Wikipedia: Microsoft Word");
    public readonly static MimeType Docm = new("Microsoft Word - Macro-Enabled Document", "application/vnd.ms-word.document.macroenabled.12", ".docm", "IANA: MS Word");
    public readonly static MimeType Docx = new("Microsoft Office - OOXML - Word Document", "application/vnd.openxmlformats-officedocument.wordprocessingml.document", ".docx", "IANA: OOXML - Word Document");
    public readonly static MimeType Dotm = new("Microsoft Word - Macro-Enabled Template", "application/vnd.ms-word.template.macroenabled.12", ".dotm", "IANA: MS Word");
    public readonly static MimeType Dotx = new("Microsoft Office - OOXML - Word Document Template", "application/vnd.openxmlformats-officedocument.wordprocessingml.template", ".dotx", "IANA: OOXML - Word Document Template");
    public readonly static MimeType Dp = new("OSGi Deployment Package", "application/vnd.osgi.dp", ".dp", "IANA: OSGi Deployment Package");
    public readonly static MimeType Dpg = new("DPGraph", "application/vnd.dpgraph", ".dpg", "IANA: DPGraph");
    public readonly static MimeType Dra = new("DRA Audio", "audio/vnd.dra", ".dra", "IANA: DRA");
    public readonly static MimeType Dsc = new("PRS Lines Tag", "text/prs.lines.tag", ".dsc", "IANA: PRS Lines Tag");
    public readonly static MimeType Dssc = new("Data Structure for the Security Suitability of Cryptographic Algorithms", "application/dssc+der", ".dssc", "RFC 5698");
    public readonly static MimeType Dtb = new("Digital Talking Book", "application/x-dtbook+xml", ".dtb", "Wikipedia: EPUB");
    public readonly static MimeType Dtd = new("Document Type Definition", "application/xml-dtd", ".dtd", "W3C DTD");
    public readonly static MimeType Dts = new("DTS Audio", "audio/vnd.dts", ".dts", "IANA: DTS");
    public readonly static MimeType Dtshd = new("DTS High Definition Audio", "audio/vnd.dts.hd", ".dtshd", "IANA: DTS HD");
    public readonly static MimeType Dvi = new("Device Independent File Format (DVI)", "application/x-dvi", ".dvi", "Wikipedia: DVI");
    public readonly static MimeType Dwf = new("Autodesk Design Web Format (DWF)", "model/vnd.dwf", ".dwf", "Wikipedia: Design Web Format");
    public readonly static MimeType Dwg = new("DWG Drawing", "image/vnd.dwg", ".dwg", "Wikipedia: DWG");
    public readonly static MimeType Dxf = new("AutoCAD DXF", "image/vnd.dxf", ".dxf", "Wikipedia: AutoCAD DXF");
    public readonly static MimeType Dxp = new("TIBCO Spotfire", "application/vnd.spotfire.dxp", ".dxp", "IANA: TIBCO Spotfire");
    public readonly static MimeType Ecelp4800 = new("Nuera ECELP 4800", "audio/vnd.nuera.ecelp4800", ".ecelp4800", "IANA: ECELP 4800");
    public readonly static MimeType Ecelp7470 = new("Nuera ECELP 7470", "audio/vnd.nuera.ecelp7470", ".ecelp7470", "IANA: ECELP 7470");
    public readonly static MimeType Ecelp9600 = new("Nuera ECELP 9600", "audio/vnd.nuera.ecelp9600", ".ecelp9600", "IANA: ECELP 9600");
    public readonly static MimeType Edm = new("Novadigm's RADIA and EDM products", "application/vnd.novadigm.edm", ".edm", "IANA: Novadigm's RADIA and EDM products");
    public readonly static MimeType Edx = new("Novadigm's RADIA and EDM products", "application/vnd.novadigm.edx", ".edx", "IANA: Novadigm's RADIA and EDM products");
    public readonly static MimeType Efif = new("Pcsel eFIF File", "application/vnd.picsel", ".efif", "IANA: Picsel eFIF File");
    public readonly static MimeType Ei6 = new("Proprietary P&G Standard Reporting System", "application/vnd.pg.osasli", ".ei6", "IANA: Proprietary P&G Standard Reporting System");
    public readonly static MimeType Eml = new("Email Message", "message/rfc822", ".eml", "RFC 2822");
    public readonly static MimeType Emma = new("Extensible MultiModal Annotation", "application/emma+xml", ".emma", "EMMA: Extensible MultiModal Annotation markup language");
    public readonly static MimeType Eol = new("Digital Winds Music", "audio/vnd.digital-winds", ".eol", "IANA: Digital Winds");
    public readonly static MimeType Eot = new("Microsoft Embedded OpenType", "application/vnd.ms-fontobject", ".eot", "IANA: MS Embedded OpenType");
    public readonly static MimeType Epub = new("Electronic Publication", "application/epub+zip", ".epub", "Wikipedia: EPUB");
    public readonly static MimeType Es = new("ECMAScript", "application/ecmascript", ".es", "ECMA-357");
    public readonly static MimeType Es3 = new("MICROSEC e-Szign¢", "application/vnd.eszigno3+xml", ".es3", "IANA: MICROSEC e-Szign¢");
    public readonly static MimeType Esf = new("QUASS Stream Player", "application/vnd.epson.esf", ".esf", "IANA: QUASS Stream Player");
    public readonly static MimeType Etx = new("Setext", "text/x-setext", ".etx", "Wikipedia: Setext");
    public readonly static MimeType Exe = new("Microsoft Application", "application/x-msdownload", ".exe", "Wikipedia: EXE");
    public readonly static MimeType Exi = new("Efficient XML Interchange", "application/exi", ".exi", "Efficient XML Interchange (EXI) Best Practices");
    public readonly static MimeType Ext = new("Novadigm's RADIA and EDM products", "application/vnd.novadigm.ext", ".ext", "IANA: Novadigm's RADIA and EDM products");
    public readonly static MimeType Ez2 = new("EZPix Secure Photo Album", "application/vnd.ezpix-album", ".ez2", "IANA: EZPix Secure Photo Album");
    public readonly static MimeType Ez3 = new("EZPix Secure Photo Album", "application/vnd.ezpix-package", ".ez3", "IANA: EZPix Secure Photo Album");
    public readonly static MimeType F = new("Fortran Source File", "text/x-fortran", ".f", "Wikipedia: Fortran");
    public readonly static MimeType F4v = new("Flash Video", "video/x-f4v", ".f4v", "Wikipedia: Flash Video");
    public readonly static MimeType Fbs = new("FastBid Sheet", "image/vnd.fastbidsheet", ".fbs", "IANA: FastBid Sheet");
    public readonly static MimeType Fcs = new("International Society for Advancement of Cytometry", "application/vnd.isac.fcs", ".fcs", "IANA: International Society for Advancement of Cytometry");
    public readonly static MimeType Fdf = new("Forms Data Format", "application/vnd.fdf", ".fdf", "IANA: Forms Data Format");
    public readonly static MimeType Felaunch = new("FCS Express Layout Link", "application/vnd.denovo.fcselayout-link", ".fe_launch", "IANA: FCS Express Layout Link");
    public readonly static MimeType Fg5 = new("Fujitsu Oasys", "application/vnd.fujitsu.oasysgp", ".fg5", "IANA: Fujitsu Oasys");
    public readonly static MimeType Fh = new("FreeHand MX", "image/x-freehand", ".fh", "Wikipedia: Macromedia Freehand");
    public readonly static MimeType Fig = new("Xfig", "application/x-xfig", ".fig", "Wikipedia: Xfig");
    public readonly static MimeType Fli = new("FLI/FLC Animation Format", "video/x-fli", ".fli", "FLI/FLC Animation Format");
    public readonly static MimeType Flo = new("Micrografx", "application/vnd.micrografx.flo", ".flo", "IANA: Micrografx");
    public readonly static MimeType Flv = new("Flash Video", "video/x-flv", ".flv", "Wikipedia: Flash Video");
    public readonly static MimeType Flw = new("KDE KOffice Office Suite - Kivio", "application/vnd.kde.kivio", ".flw", "IANA: KDE KOffice Office Suite");
    public readonly static MimeType Flx = new("FLEXSTOR", "text/vnd.fmi.flexstor", ".flx", "IANA: FLEXSTOR");
    public readonly static MimeType Fly = new("mod_fly / fly.cgi", "text/vnd.fly", ".fly", "IANA: Fly");
    public readonly static MimeType Fm = new("FrameMaker Normal Format", "application/vnd.framemaker", ".fm", "IANA: FrameMaker");
    public readonly static MimeType Fnc = new("Frogans Player", "application/vnd.frogans.fnc", ".fnc", "IANA: Frogans Player");
    public readonly static MimeType Fpx = new("FlashPix", "image/vnd.fpx", ".fpx", "IANA: FPX");
    public readonly static MimeType Fsc = new("Friendly Software Corporation", "application/vnd.fsc.weblaunch", ".fsc", "IANA: Friendly Software Corporation");
    public readonly static MimeType Fst = new("FAST Search & Transfer ASA", "image/vnd.fst", ".fst", "IANA: FAST Search & Transfer ASA");
    public readonly static MimeType Ftc = new("FluxTime Clip", "application/vnd.fluxtime.clip", ".ftc", "IANA: FluxTime Clip");
    public readonly static MimeType Fti = new("ANSER-WEB Terminal Client - Web Funds Transfer", "application/vnd.anser-web-funds-transfer-initiation", ".fti", "IANA: ANSWER-WEB");
    public readonly static MimeType Fvt = new("FAST Search & Transfer ASA", "video/vnd.fvt", ".fvt", "IANA: FVT");
    public readonly static MimeType Fxp = new("Adobe Flex Project", "application/vnd.adobe.fxp", ".fxp", "IANA: Adobe Flex Project");
    public readonly static MimeType Fzs = new("FuzzySheet", "application/vnd.fuzzysheet", ".fzs", "IANA: FuzySheet");
    public readonly static MimeType G2w = new("GeoplanW", "application/vnd.geoplan", ".g2w", "IANA: GeoplanW");
    public readonly static MimeType G3 = new("G3 Fax Image", "image/g3fax", ".g3", "Wikipedia: G3 Fax Image");
    public readonly static MimeType G3w = new("GeospacW", "application/vnd.geospace", ".g3w", "IANA: GeospacW");
    public readonly static MimeType Gac = new("Groove - Account", "application/vnd.groove-account", ".gac", "IANA: Groove");
    public readonly static MimeType Gdl = new("Geometric Description Language (GDL)", "model/vnd.gdl", ".gdl", "IANA: GDL");
    public readonly static MimeType Geo = new("DynaGeo", "application/vnd.dynageo", ".geo", "IANA: DynaGeo");
    public readonly static MimeType Gex = new("GeoMetry Explorer", "application/vnd.geometry-explorer", ".gex", "IANA: GeoMetry Explorer");
    public readonly static MimeType Ggb = new("GeoGebra", "application/vnd.geogebra.file", ".ggb", "IANA: GeoGebra");
    public readonly static MimeType Ggt = new("GeoGebra", "application/vnd.geogebra.tool", ".ggt", "IANA: GeoGebra");
    public readonly static MimeType Ghf = new("Groove - Help", "application/vnd.groove-help", ".ghf", "IANA: Groove");
    public readonly static MimeType Gif = new("Graphics Interchange Format", "image/gif", ".gif", "Wikipedia: Graphics Interchange Format");
    public readonly static MimeType Gim = new("Groove - Identity Message", "application/vnd.groove-identity-message", ".gim", "IANA: Groove");
    public readonly static MimeType Gmx = new("GameMaker ActiveX", "application/vnd.gmx", ".gmx", "IANA: GameMaker ActiveX");
    public readonly static MimeType Gnumeric = new("Gnumeric", "application/x-gnumeric", ".gnumeric", "Wikipedia: Gnumeric");
    public readonly static MimeType Gph = new("NpGraphIt", "application/vnd.flographit", ".gph", "IANA: FloGraphIt");
    public readonly static MimeType Gqf = new("GrafEq", "application/vnd.grafeq", ".gqf", "IANA: GrafEq");
    public readonly static MimeType Gram = new("Speech Recognition Grammar Specification", "application/srgs", ".gram", "W3C Speech Grammar");
    public readonly static MimeType Grv = new("Groove - Injector", "application/vnd.groove-injector", ".grv", "IANA: Groove");
    public readonly static MimeType Grxml = new("Speech Recognition Grammar Specification - XML", "application/srgs+xml", ".grxml", "W3C Speech Grammar");
    public readonly static MimeType Gsf = new("Ghostscript Font", "application/x-font-ghostscript", ".gsf", "Wikipedia: Ghostscript");
    public readonly static MimeType Gtar = new("GNU Tar Files", "application/x-gtar", ".gtar", "GNU Tar");
    public readonly static MimeType Gtm = new("Groove - Tool Message", "application/vnd.groove-tool-message", ".gtm", "IANA: Groove");
    public readonly static MimeType Gtw = new("Gen-Trix Studio", "model/vnd.gtw", ".gtw", "IANA: GTW");
    public readonly static MimeType Gv = new("Graphviz", "text/vnd.graphviz", ".gv", "IANA: Graphviz");
    public readonly static MimeType Gxt = new("GEONExT and JSXGraph", "application/vnd.geonext", ".gxt", "IANA: GEONExT and JSXGraph");
    public readonly static MimeType H261 = new("H.261", "video/h261", ".h261", "Wikipedia: H.261");
    public readonly static MimeType H263 = new("H.263", "video/h263", ".h263", "Wikipedia: H.263");
    public readonly static MimeType H264 = new("H.264", "video/h264", ".h264", "Wikipedia: H.264");
    public readonly static MimeType Hal = new("Hypertext Application Language", "application/vnd.hal+xml", ".hal", "IANA: HAL");
    public readonly static MimeType Hbci = new("Homebanking Computer Interface (HBCI)", "application/vnd.hbci", ".hbci", "IANA: HBCI");
    public readonly static MimeType Hdf = new("Hierarchical Data Format", "application/x-hdf", ".hdf", "Wikipedia: Hierarchical Data Format");
    public readonly static MimeType Hlp = new("WinHelp", "application/winhlp", ".hlp", "Wikipedia: WinHelp");
    public readonly static MimeType Hpgl = new("HP-GL/2 and HP RTL", "application/vnd.hp-hpgl", ".hpgl", "IANA: HP-GL/2 and HP RTL");
    public readonly static MimeType Hpid = new("Hewlett Packard Instant Delivery", "application/vnd.hp-hpid", ".hpid", "IANA: Hewlett Packard Instant Delivery");
    public readonly static MimeType Hps = new("Hewlett-Packard's WebPrintSmart", "application/vnd.hp-hps", ".hps", "IANA: Hewlett-Packard's WebPrintSmart");
    public readonly static MimeType Hqx = new("Macintosh BinHex 4.0", "application/mac-binhex40", ".hqx", "MacMIME");
    public readonly static MimeType Htke = new("Kenamea App", "application/vnd.kenameaapp", ".htke", "IANA: Kenamea App");
    public readonly static MimeType Html = new("HyperText Markup Language (HTML)", "text/html", ".html", "Wikipedia: HTML");
    public readonly static MimeType Hvd = new("HV Voice Dictionary", "application/vnd.yamaha.hv-dic", ".hvd", "IANA: HV Voice Dictionary");
    public readonly static MimeType Hvp = new("HV Voice Parameter", "application/vnd.yamaha.hv-voice", ".hvp", "IANA: HV Voice Parameter");
    public readonly static MimeType Hvs = new("HV Script", "application/vnd.yamaha.hv-script", ".hvs", "IANA: HV Script");
    public readonly static MimeType I2g = new("Interactive Geometry Software", "application/vnd.intergeo", ".i2g", "IANA: Interactive Geometry Software");
    public readonly static MimeType Icc = new("ICC profile", "application/vnd.iccprofile", ".icc", "IANA: ICC profile");
    public readonly static MimeType Ice = new("CoolTalk", "x-conference/x-cooltalk", ".ice", "Wikipedia: CoolTalk");
    public readonly static MimeType Ico = new("Icon Image", "image/x-icon", ".ico", "Wikipedia: ICO File Format");
    public readonly static MimeType Ics = new("iCalendar", "text/calendar", ".ics", "Wikipedia: iCalendar");
    public readonly static MimeType Ief = new("Image Exchange Format", "image/ief", ".ief", "RFC 1314");
    public readonly static MimeType Ifm = new("Shana Informed Filler", "application/vnd.shana.informed.formdata", ".ifm", "IANA: Shana Informed Filler");
    public readonly static MimeType Igl = new("igLoader", "application/vnd.igloader", ".igl", "IANA: igLoader");
    public readonly static MimeType Igm = new("IOCOM Visimeet", "application/vnd.insors.igm", ".igm", "IANA: IOCOM Visimeet");
    public readonly static MimeType Igs = new("Initial Graphics Exchange Specification (IGES)", "model/iges", ".igs", "Wikipedia: IGES");
    public readonly static MimeType Igx = new("Micrografx iGrafx Professional", "application/vnd.micrografx.igx", ".igx", "IANA: Micrografx");
    public readonly static MimeType Iif = new("Shana Informed Filler", "application/vnd.shana.informed.interchange", ".iif", "IANA: Shana Informed Filler");
    public readonly static MimeType Imp = new("Simply Accounting - Data Import", "application/vnd.accpac.simply.imp", ".imp", "IANA: Simply Accounting");
    public readonly static MimeType Ims = new("Microsoft Class Server", "application/vnd.ms-ims", ".ims", "IANA: MS Class Server");
    public readonly static MimeType Ipfix = new("Internet Protocol Flow Information Export", "application/ipfix", ".ipfix", "RFC 3917");
    public readonly static MimeType Ipk = new("Shana Informed Filler", "application/vnd.shana.informed.package", ".ipk", "IANA: Shana Informed Filler");
    public readonly static MimeType Irm = new("IBM DB2 Rights Manager", "application/vnd.ibm.rights-management", ".irm", "IANA: IBM DB2 Rights Manager");
    public readonly static MimeType Irp = new("iRepository / Lucidoc Editor", "application/vnd.irepository.package+xml", ".irp", "IANA: iRepository / Lucidoc Editor");
    public readonly static MimeType Itp = new("Shana Informed Filler", "application/vnd.shana.informed.formtemplate", ".itp", "IANA: Shana Informed Filler");
    public readonly static MimeType Ivp = new("ImmerVision PURE Players", "application/vnd.immervision-ivp", ".ivp", "IANA: ImmerVision PURE Players");
    public readonly static MimeType Ivu = new("ImmerVision PURE Players", "application/vnd.immervision-ivu", ".ivu", "IANA: ImmerVision PURE Players");
    public readonly static MimeType Jad = new("J2ME App Descriptor", "text/vnd.sun.j2me.app-descriptor", ".jad", "IANA: J2ME App Descriptor");
    public readonly static MimeType Jam = new("Lightspeed Audio Lab", "application/vnd.jam", ".jam", "IANA: Lightspeed Audio Lab");
    public readonly static MimeType Jar = new("Java Archive", "application/java-archive", ".jar", "Wikipedia: JAR file format");
    public readonly static MimeType Java = new("Java Source File", "text/x-java-source,java", ".java", "Wikipedia: Java");
    public readonly static MimeType Jisp = new("RhymBox", "application/vnd.jisp", ".jisp", "IANA: RhymBox");
    public readonly static MimeType Jlt = new("HP Indigo Digital Press - Job Layout Languate", "application/vnd.hp-jlyt", ".jlt", "IANA: HP Job Layout Language");
    public readonly static MimeType Jnlp = new("Java Network Launching Protocol", "application/x-java-jnlp-file", ".jnlp", "Wikipedia: Java Web Start");
    public readonly static MimeType Joda = new("Joda Archive", "application/vnd.joost.joda-archive", ".joda", "IANA: Joda Archive");
    public readonly static MimeType Jpg = new("JPEG Image", "image/jpeg", ".jpeg, .jpg", "RFC 1314");
    public readonly static MimeType Jpgv = new("JPGVideo", "video/jpeg", ".jpgv", "RFC 3555");
    public readonly static MimeType Jpm = new("JPEG 2000 Compound Image File Format", "video/jpm", ".jpm", "IANA: JPM");
    public readonly static MimeType Js = new("JavaScript", "application/javascript", ".js", "JavaScript");
    public readonly static MimeType Json = new("JavaScript Object Notation (JSON)", "application/json", ".json", "Wikipedia: JSON");
    public readonly static MimeType Karbon = new("KDE KOffice Office Suite - Karbon", "application/vnd.kde.karbon", ".karbon", "IANA: KDE KOffice Office Suite");
    public readonly static MimeType Kfo = new("KDE KOffice Office Suite - Kformula", "application/vnd.kde.kformula", ".kfo", "IANA: KDE KOffice Office Suite");
    public readonly static MimeType Kia = new("Kidspiration", "application/vnd.kidspiration", ".kia", "IANA: Kidspiration");
    public readonly static MimeType Kml = new("Google Earth - KML", "application/vnd.google-earth.kml+xml", ".kml", "IANA: Google Earth");
    public readonly static MimeType Kmz = new("Google Earth - Zipped KML", "application/vnd.google-earth.kmz", ".kmz", "IANA: Google Earth");
    public readonly static MimeType Kne = new("Kinar Applications", "application/vnd.kinar", ".kne", "IANA: Kina Applications");
    public readonly static MimeType Kon = new("KDE KOffice Office Suite - Kontour", "application/vnd.kde.kontour", ".kon", "IANA: KDE KOffice Office Suite");
    public readonly static MimeType Kpr = new("KDE KOffice Office Suite - Kpresenter", "application/vnd.kde.kpresenter", ".kpr", "IANA: KDE KOffice Office Suite");
    public readonly static MimeType Ksp = new("KDE KOffice Office Suite - Kspread", "application/vnd.kde.kspread", ".ksp", "IANA: KDE KOffice Office Suite");
    public readonly static MimeType Ktx = new("OpenGL Textures (KTX)", "image/ktx", ".ktx", "KTX File Format");
    public readonly static MimeType Ktz = new("Kahootz", "application/vnd.kahootz", ".ktz", "IANA: Kahootz");
    public readonly static MimeType Kwd = new("KDE KOffice Office Suite - Kword", "application/vnd.kde.kword", ".kwd", "IANA: KDE KOffice Office Suite");
    public readonly static MimeType Lasxml = new("Laser App Enterprise", "application/vnd.las.las+xml", ".lasxml", "IANA: Laser App Enterprise");
    public readonly static MimeType Latex = new("LaTeX", "application/x-latex", ".latex", "Wikipedia: LaTeX");
    public readonly static MimeType Lbd = new("Life Balance - Desktop Edition", "application/vnd.llamagraphics.life-balance.desktop", ".lbd", "IANA: Life Balance");
    public readonly static MimeType Lbe = new("Life Balance - Exchange Format", "application/vnd.llamagraphics.life-balance.exchange+xml", ".lbe", "IANA: Life Balance");
    public readonly static MimeType Les = new("Archipelago Lesson Player", "application/vnd.hhe.lesson-player", ".les", "IANA: Archipelago Lesson Player");
    public readonly static MimeType Link66 = new("ROUTE 66 Location Based Services", "application/vnd.route66.link66+xml", ".link66", "IANA: ROUTE 66");
    public readonly static MimeType Lrm = new("Microsoft Learning Resource Module", "application/vnd.ms-lrm", ".lrm", "IANA: MS Learning Resource Module");
    public readonly static MimeType Ltf = new("Frogans Player", "application/vnd.frogans.ltf", ".ltf", "IANA: Frogans Player");
    public readonly static MimeType Lvp = new("Lucent Voice", "audio/vnd.lucent.voice", ".lvp", "IANA: Lucent Voice");
    public readonly static MimeType Lwp = new("Lotus Wordpro", "application/vnd.lotus-wordpro", ".lwp", "IANA: Lotus Wordpro");
    public readonly static MimeType M21 = new("MPEG-21", "application/mp21", ".m21", "Wikipedia: MPEG-21");
    public readonly static MimeType M3u = new("M3U (Multimedia Playlist)", "audio/x-mpegurl", ".m3u", "Wikipedia: M3U");
    public readonly static MimeType M3u8 = new("Multimedia Playlist Unicode", "application/vnd.apple.mpegurl", ".m3u8", "Wikipedia: M3U");
    public readonly static MimeType M4v = new("M4v", "video/x-m4v", ".m4v", "Wikipedia: M4v");
    public readonly static MimeType Ma = new("Mathematica Notebooks", "application/mathematica", ".ma", "IANA - Mathematica");
    public readonly static MimeType Mads = new("Metadata Authority  Description Schema", "application/mads+xml", ".mads", "RFC 6207");
    public readonly static MimeType Mag = new("EcoWin Chart", "application/vnd.ecowin.chart", ".mag", "IANA: EcoWin Chart");
    public readonly static MimeType Mathml = new("Mathematical Markup Language", "application/mathml+xml", ".mathml", "W3C Math Home");
    public readonly static MimeType Mbk = new("Mobius Management Systems - Basket file", "application/vnd.mobius.mbk", ".mbk", "IANA: Mobius Management Systems");
    public readonly static MimeType Mbox = new("Mbox database files", "application/mbox", ".mbox", "RFC 4155");
    public readonly static MimeType Mc1 = new("MedCalc", "application/vnd.medcalcdata", ".mc1", "IANA: MedCalc");
    public readonly static MimeType Mcd = new("Micro CADAM Helix D&D", "application/vnd.mcd", ".mcd", "IANA: Micro CADAM Helix D&D");
    public readonly static MimeType Mcurl = new("Curl - Manifest File", "text/vnd.curl.mcurl", ".mcurl", "Curl Manifest File");
    public readonly static MimeType Mdb = new("Microsoft Access", "application/x-msaccess", ".mdb", "Wikipedia: Microsoft Access");
    public readonly static MimeType Mdi = new("Microsoft Document Imaging Format", "image/vnd.ms-modi", ".mdi", "Wikipedia: Microsoft Document Image Format");
    public readonly static MimeType Meta4 = new("Metalink", "application/metalink4+xml", ".meta4", "Wikipedia: Metalink");
    public readonly static MimeType Mets = new("Metadata Encoding and Transmission Standard", "application/mets+xml", ".mets", "RFC 6207");
    public readonly static MimeType Mfm = new("Melody Format for Mobile Platform", "application/vnd.mfmp", ".mfm", "IANA: Melody Format for Mobile Platform");
    public readonly static MimeType Mgp = new("MapGuide DBXML", "application/vnd.osgeo.mapguide.package", ".mgp", "IANA: MapGuide DBXML");
    public readonly static MimeType Mgz = new("EFI Proteus", "application/vnd.proteus.magazine", ".mgz", "IANA: EFI Proteus");
    public readonly static MimeType Mid = new("MIDI - Musical Instrument Digital Interface", "audio/midi", ".mid", "Wikipedia: MIDI");
    public readonly static MimeType Mif = new("FrameMaker Interchange Format", "application/vnd.mif", ".mif", "IANA: FrameMaker Interchange Format");
    public readonly static MimeType Mj2 = new("Motion JPEG 2000", "video/mj2", ".mj2", "IANA: MJ2");
    public readonly static MimeType Mlp = new("Dolby Meridian Lossless Packing", "application/vnd.dolby.mlp", ".mlp", "IANA: Dolby Meridian Lossless Packing");
    public readonly static MimeType Mmd = new("Karaoke on Chipnuts Chipsets", "application/vnd.chipnuts.karaoke-mmd", ".mmd", "IANA: Chipnuts Karaoke");
    public readonly static MimeType Mmf = new("SMAF File", "application/vnd.smaf", ".mmf", "IANA: SMAF File");
    public readonly static MimeType Mmr = new("EDMICS 2000", "image/vnd.fujixerox.edmics-mmr", ".mmr", "IANA: EDMICS 2000");
    public readonly static MimeType Mny = new("Microsoft Money", "application/x-msmoney", ".mny", "Wikipedia: Microsoft Money");
    public readonly static MimeType Mods = new("Metadata Object Description Schema", "application/mods+xml", ".mods", "RFC 6207");
    public readonly static MimeType Movie = new("SGI Movie", "video/x-sgi-movie", ".movie", "SGI Facts");
    public readonly static MimeType Mp4 = new("MPEG4", "application/mp4", ".mp4", "RFC 4337");
    public readonly static MimeType Mp4v = new("MPEG-4 Video", "video/mp4", ".mp4", "Wikipedia: MP4");
    public readonly static MimeType Mp4a = new("MPEG-4 Audio", "audio/mp4", ".mp4a", "Wikipedia: MP4A");
    public readonly static MimeType Mpc = new("Mophun Certificate", "application/vnd.mophun.certificate", ".mpc", "IANA: Mophun Certificate");
    public readonly static MimeType Mpeg = new("MPEG Video", "video/mpeg", ".mpeg", "Wikipedia: MPEG");
    public readonly static MimeType Mpga = new("MPEG Audio", "audio/mpeg", ".mpga", "Wikipedia: MPGA");
    public readonly static MimeType Mpkg = new("Apple Installer Package", "application/vnd.apple.installer+xml", ".mpkg", "IANA: Apple Installer");
    public readonly static MimeType Mpm = new("Blueice Research Multipass", "application/vnd.blueice.multipass", ".mpm", "IANA: Multipass");
    public readonly static MimeType Mpn = new("Mophun VM", "application/vnd.mophun.application", ".mpn", "IANA: Mophun VM");
    public readonly static MimeType Mpp = new("Microsoft Project", "application/vnd.ms-project", ".mpp", "IANA: MS PowerPoint");
    public readonly static MimeType Mpy = new("MiniPay", "application/vnd.ibm.minipay", ".mpy", "IANA: MiniPay");
    public readonly static MimeType Mqy = new("Mobius Management Systems - Query File", "application/vnd.mobius.mqy", ".mqy", "IANA: Mobius Management Systems");
    public readonly static MimeType Mrc = new("MARC Formats", "application/marc", ".mrc", "RFC 2220");
    public readonly static MimeType Mrcx = new("MARC21 XML Schema", "application/marcxml+xml", ".mrcx", "RFC 6207");
    public readonly static MimeType Mscml = new("Media Server Control Markup Language", "application/mediaservercontrol+xml", ".mscml", "RFC 5022");
    public readonly static MimeType Mseq = new("3GPP MSEQ File", "application/vnd.mseq", ".mseq", "IANA: 3GPP MSEQ File");
    public readonly static MimeType Msf = new("QUASS Stream Player", "application/vnd.epson.msf", ".msf", "IANA: QUASS Stream Player");
    public readonly static MimeType Msh = new("Mesh Data Type", "model/mesh", ".msh", "RFC 2077");
    public readonly static MimeType Msl = new("Mobius Management Systems - Script Language", "application/vnd.mobius.msl", ".msl", "IANA: Mobius Management Systems");
    public readonly static MimeType Msty = new("Muvee Automatic Video Editing", "application/vnd.muvee.style", ".msty", "IANA: Muvee");
    public readonly static MimeType Mts = new("Virtue MTS", "model/vnd.mts", ".mts", "IANA: MTS");
    public readonly static MimeType Mus = new("MUsical Score Interpreted Code Invented  for the ASCII designation of Notation", "application/vnd.musician", ".mus", "IANA: MUSICIAN");
    public readonly static MimeType Musicxml = new("Recordare Applications", "application/vnd.recordare.musicxml+xml", ".musicxml", "IANA: Recordare Apps");
    public readonly static MimeType Mvb = new("Microsoft MediaView", "application/x-msmediaview", ".mvb", "Windows Help");
    public readonly static MimeType Mwf = new("Medical Waveform Encoding Format", "application/vnd.mfer", ".mwf", "IANA: Medical Waveform Encoding Format");
    public readonly static MimeType Mxf = new("Material Exchange Format", "application/mxf", ".mxf", "RFC 4539");
    public readonly static MimeType Mxl = new("Recordare Applications", "application/vnd.recordare.musicxml", ".mxl", "IANA: Recordare Apps");
    public readonly static MimeType Mxml = new("MXML", "application/xv+xml", ".mxml", "Wikipedia: MXML");
    public readonly static MimeType Mxs = new("Triscape Map Explorer", "application/vnd.triscape.mxs", ".mxs", "IANA: Triscape Map Explorer");
    public readonly static MimeType Mxu = new("MPEG Url", "video/vnd.mpegurl", ".mxu", "IANA: MPEG Url");
    public readonly static MimeType Ngage = new("N-Gage Game Installer", "application/vnd.nokia.n-gage.symbian.install", ".n-gage", "IANA: N-Gage Game Installer");
    public readonly static MimeType N3 = new("Notation3", "text/n3", ".n3", "Wikipedia: Notation3");
    public readonly static MimeType Nbp = new("Mathematica Notebook Player", "application/vnd.wolfram.player", ".nbp", "IANA: Mathematica Notebook Player");
    public readonly static MimeType Nc = new("Network Common Data Form (NetCDF)", "application/x-netcdf", ".nc", "Wikipedia: NetCDF");
    public readonly static MimeType Ncx = new("Navigation Control file for XML (for ePub)", "application/x-dtbncx+xml", ".ncx", "Wikipedia: EPUB");
    public readonly static MimeType Ngdat = new("N-Gage Game Data", "application/vnd.nokia.n-gage.data", ".ngdat", "IANA: N-Gage Game Data");
    public readonly static MimeType Nlu = new("neuroLanguage", "application/vnd.neurolanguage.nlu", ".nlu", "IANA: neuroLanguage");
    public readonly static MimeType Nml = new("Enliven Viewer", "application/vnd.enliven", ".nml", "IANA: Enliven Viewer");
    public readonly static MimeType Nnd = new("NobleNet Directory", "application/vnd.noblenet-directory", ".nnd", "IANA: NobleNet Directory");
    public readonly static MimeType Nns = new("NobleNet Sealer", "application/vnd.noblenet-sealer", ".nns", "IANA: NobleNet Sealer");
    public readonly static MimeType Nnw = new("NobleNet Web", "application/vnd.noblenet-web", ".nnw", "IANA: NobleNet Web");
    public readonly static MimeType Npx = new("FlashPix", "image/vnd.net-fpx", ".npx", "IANA: FPX");
    public readonly static MimeType Nsf = new("Lotus Notes", "application/vnd.lotus-notes", ".nsf", "IANA: Lotus Notes");
    public readonly static MimeType Oa2 = new("Fujitsu Oasys", "application/vnd.fujitsu.oasys2", ".oa2", "IANA: Fujitsu Oasys");
    public readonly static MimeType Oa3 = new("Fujitsu Oasys", "application/vnd.fujitsu.oasys3", ".oa3", "IANA: Fujitsu Oasys");
    public readonly static MimeType Oas = new("Fujitsu Oasys", "application/vnd.fujitsu.oasys", ".oas", "IANA: Fujitsu Oasys");
    public readonly static MimeType Obd = new("Microsoft Office Binder", "application/x-msbinder", ".obd", "Wikipedia: Microsoft Shared Tools");
    public readonly static MimeType Oda = new("Office Document Architecture", "application/oda", ".oda", "RFC 2161");
    public readonly static MimeType Odb = new("OpenDocument Database", "application/vnd.oasis.opendocument.database", ".odb", "IANA: OpenDocument Database");
    public readonly static MimeType Odc = new("OpenDocument Chart", "application/vnd.oasis.opendocument.chart", ".odc", "IANA: OpenDocument Chart");
    public readonly static MimeType Odf = new("OpenDocument Formula", "application/vnd.oasis.opendocument.formula", ".odf", "IANA: OpenDocument Formula");
    public readonly static MimeType Odft = new("OpenDocument Formula Template", "application/vnd.oasis.opendocument.formula-template", ".odft", "IANA: OpenDocument Formula Template");
    public readonly static MimeType Odg = new("OpenDocument Graphics", "application/vnd.oasis.opendocument.graphics", ".odg", "IANA: OpenDocument Graphics");
    public readonly static MimeType Odi = new("OpenDocument Image", "application/vnd.oasis.opendocument.image", ".odi", "IANA: OpenDocument Image");
    public readonly static MimeType Odm = new("OpenDocument Text Master", "application/vnd.oasis.opendocument.text-master", ".odm", "IANA: OpenDocument Text Master");
    public readonly static MimeType Odp = new("OpenDocument Presentation", "application/vnd.oasis.opendocument.presentation", ".odp", "IANA: OpenDocument Presentation");
    public readonly static MimeType Ods = new("OpenDocument Spreadsheet", "application/vnd.oasis.opendocument.spreadsheet", ".ods", "IANA: OpenDocument Spreadsheet");
    public readonly static MimeType Odt = new("OpenDocument Text", "application/vnd.oasis.opendocument.text", ".odt", "IANA: OpenDocument Text");
    public readonly static MimeType Oga = new("Ogg Audio", "audio/ogg", ".oga", "Wikipedia: Ogg");
    public readonly static MimeType Ogv = new("Ogg Video", "video/ogg", ".ogv", "Wikipedia: Ogg");
    public readonly static MimeType Ogx = new("Ogg", "application/ogg", ".ogx", "Wikipedia: Ogg");
    public readonly static MimeType Onetoc = new("Microsoft OneNote", "application/onenote", ".onetoc", "MS OneNote 2010");
    public readonly static MimeType Opf = new("Open eBook Publication Structure", "application/oebps-package+xml", ".opf", "Wikipedia: Open eBook");
    public readonly static MimeType Org = new("Lotus Organizer", "application/vnd.lotus-organizer", ".org", "IANA: Lotus Organizer");
    public readonly static MimeType Osf = new("Open Score Format", "application/vnd.yamaha.openscoreformat", ".osf", "IANA: Open Score Format");
    public readonly static MimeType Osfpvg = new("OSFPVG", "application/vnd.yamaha.openscoreformat.osfpvg+xml", ".osfpvg", "IANA: OSFPVG");
    public readonly static MimeType Otc = new("OpenDocument Chart Template", "application/vnd.oasis.opendocument.chart-template", ".otc", "IANA: OpenDocument Chart Template");
    public readonly static MimeType Otf = new("OpenType Font File", "application/x-font-otf", ".otf", "OpenType Font File");
    public readonly static MimeType Otg = new("OpenDocument Graphics Template", "application/vnd.oasis.opendocument.graphics-template", ".otg", "IANA: OpenDocument Graphics Template");
    public readonly static MimeType Oth = new("Open Document Text Web", "application/vnd.oasis.opendocument.text-web", ".oth", "IANA: OpenDocument Text Web");
    public readonly static MimeType Oti = new("OpenDocument Image Template", "application/vnd.oasis.opendocument.image-template", ".oti", "IANA: OpenDocument Image Template");
    public readonly static MimeType Otp = new("OpenDocument Presentation Template", "application/vnd.oasis.opendocument.presentation-template", ".otp", "IANA: OpenDocument Presentation Template");
    public readonly static MimeType Ots = new("OpenDocument Spreadsheet Template", "application/vnd.oasis.opendocument.spreadsheet-template", ".ots", "IANA: OpenDocument Spreadsheet Template");
    public readonly static MimeType Ott = new("OpenDocument Text Template", "application/vnd.oasis.opendocument.text-template", ".ott", "IANA: OpenDocument Text Template");
    public readonly static MimeType Oxt = new("Open Office Extension", "application/vnd.openofficeorg.extension", ".oxt", "IANA: Open Office Extension");
    public readonly static MimeType P = new("Pascal Source File", "text/x-pascal", ".p", "Wikipedia: Pascal");
    public readonly static MimeType P10 = new("PKCS #10 - Certification Request Standard", "application/pkcs10", ".p10", "RFC 2986");
    public readonly static MimeType P12 = new("PKCS #12 - Personal Information Exchange Syntax Standard", "application/x-pkcs12", ".p12", "RFC 2986");
    public readonly static MimeType P7b = new("PKCS #7 - Cryptographic Message Syntax Standard (Certificates)", "application/x-pkcs7-certificates", ".p7b", "RFC 2986");
    public readonly static MimeType P7m = new("PKCS #7 - Cryptographic Message Syntax Standard", "application/pkcs7-mime", ".p7m", "RFC 2315");
    public readonly static MimeType P7r = new("PKCS #7 - Cryptographic Message Syntax Standard (Certificate Request Response)", "application/x-pkcs7-certreqresp", ".p7r", "RFC 2986");
    public readonly static MimeType P7s = new("PKCS #7 - Cryptographic Message Syntax Standard", "application/pkcs7-signature", ".p7s", "RFC 2315");
    public readonly static MimeType P8 = new("PKCS #8 - Private-Key Information Syntax Standard", "application/pkcs8", ".p8", "RFC 5208");
    public readonly static MimeType Par = new("BAS Partitur Format", "text/plain-bas", ".par", "Phonetik BAS");
    public readonly static MimeType Paw = new("PawaaFILE", "application/vnd.pawaafile", ".paw", "IANA: PawaaFILE");
    public readonly static MimeType Pbd = new("PowerBuilder", "application/vnd.powerbuilder6", ".pbd", "IANA: PowerBuilder");
    public readonly static MimeType Pbm = new("Portable Bitmap Format", "image/x-portable-bitmap", ".pbm", "Wikipedia: Netpbm Format");
    public readonly static MimeType Pcf = new("Portable Compiled Format", "application/x-font-pcf", ".pcf", "Wikipedia: Portable Compiled Format");
    public readonly static MimeType Pcl = new("HP Printer Command Language", "application/vnd.hp-pcl", ".pcl", "IANA: HP Printer Command Language");
    public readonly static MimeType Pclxl = new("PCL 6 Enhanced (Formely PCL XL)", "application/vnd.hp-pclxl", ".pclxl", "IANA: HP PCL XL");
    public readonly static MimeType Pcurl = new("CURL Applet", "application/vnd.curl.pcurl", ".pcurl", "IANA: CURL Applet");
    public readonly static MimeType Pcx = new("PCX Image", "image/x-pcx", ".pcx", "Wikipedia: PCX");
    public readonly static MimeType Pdb = new("PalmOS Data", "application/vnd.palm", ".pdb", "IANA: PalmOS Data");
    public readonly static MimeType Pdf = new("Adobe Portable Document Format", "application/pdf", ".pdf", "Adobe PDF");
    public readonly static MimeType Pfa = new("PostScript Fonts", "application/x-font-type1", ".pfa", "Wikipedia: PostScript Fonts");
    public readonly static MimeType Pfr = new("Portable Font Resource", "application/font-tdpfr", ".pfr", "RFC 3073");
    public readonly static MimeType Pgm = new("Portable Graymap Format", "image/x-portable-graymap", ".pgm", "Wikipedia: Netpbm Format");
    public readonly static MimeType Pgn = new("Portable Game Notation (Chess Games)", "application/x-chess-pgn", ".pgn", "Wikipedia: Portable Game Notationb");
    public readonly static MimeType Pgp = new("Pretty Good Privacy", "application/pgp-encrypted", ".pgp", "RFC 2015");
    public readonly static MimeType Pic = new("PICT Image", "image/x-pict", ".pic", "Wikipedia: PICT");
    public readonly static MimeType Pjpeg = new("JPEG Image (Progressive)", "image/pjpeg", ".pjpeg", "JPEG image compression FAQ");
    public readonly static MimeType Pki = new("Internet Public Key Infrastructure - Certificate Management Protocole", "application/pkixcmp", ".pki", "RFC 2585");
    public readonly static MimeType Pkipath = new("Internet Public Key Infrastructure - Certification Path", "application/pkix-pkipath", ".pkipath", "RFC 2585");
    public readonly static MimeType Plb = new("3rd Generation Partnership Project - Pic Large", "application/vnd.3gpp.pic-bw-large", ".plb", "3GPP");
    public readonly static MimeType Plc = new("Mobius Management Systems - Policy Definition Language File", "application/vnd.mobius.plc", ".plc", "IANA: Mobius Management Systems");
    public readonly static MimeType Plf = new("PocketLearn Viewers", "application/vnd.pocketlearn", ".plf", "IANA: PocketLearn Viewers");
    public readonly static MimeType Pls = new("Pronunciation Lexicon Specification", "application/pls+xml", ".pls", "RFC 4267");
    public readonly static MimeType Pml = new("PosML", "application/vnd.ctc-posml", ".pml", "IANA: PosML");
    public readonly static MimeType Png = new("Portable Network Graphics (PNG)", "image/png", ".png", "RFC 2083");
    public readonly static MimeType Pnm = new("Portable Anymap Image", "image/x-portable-anymap", ".pnm", "Wikipedia: Netpbm Format");
    public readonly static MimeType Portpkg = new("MacPorts Port System", "application/vnd.macports.portpkg", ".portpkg", "IANA: MacPorts Port System");
    public readonly static MimeType Potm = new("Microsoft PowerPoint - Macro-Enabled Template File", "application/vnd.ms-powerpoint.template.macroenabled.12", ".potm", "IANA: MS PowerPoint");
    public readonly static MimeType Potx = new("Microsoft Office - OOXML - Presentation Template", "application/vnd.openxmlformats-officedocument.presentationml.template", ".potx", "IANA: OOXML - Presentation Template");
    public readonly static MimeType Ppam = new("Microsoft PowerPoint - Add-in file", "application/vnd.ms-powerpoint.addin.macroenabled.12", ".ppam", "IANA: MS PowerPoint");
    public readonly static MimeType Ppd = new("Adobe PostScript Printer Description File Format", "application/vnd.cups-ppd", ".ppd", "IANA: Cups");
    public readonly static MimeType Ppm = new("Portable Pixmap Format", "image/x-portable-pixmap", ".ppm", "Wikipedia: Netpbm Format");
    public readonly static MimeType Ppsm = new("Microsoft PowerPoint - Macro-Enabled Slide Show File", "application/vnd.ms-powerpoint.slideshow.macroenabled.12", ".ppsm", "IANA: MS PowerPoint");
    public readonly static MimeType Ppsx = new("Microsoft Office - OOXML - Presentation (Slideshow)", "application/vnd.openxmlformats-officedocument.presentationml.slideshow", ".ppsx", "IANA: OOXML - Presentation");
    public readonly static MimeType Ppt = new("Microsoft PowerPoint", "application/vnd.ms-powerpoint", ".ppt", "IANA: MS PowerPoint");
    public readonly static MimeType Pptm = new("Microsoft PowerPoint - Macro-Enabled Presentation File", "application/vnd.ms-powerpoint.presentation.macroenabled.12", ".pptm", "IANA: MS PowerPoint");
    public readonly static MimeType Pptx = new("Microsoft Office - OOXML - Presentation", "application/vnd.openxmlformats-officedocument.presentationml.presentation", ".pptx", "IANA: OOXML - Presentation");
    public readonly static MimeType Prc = new("Mobipocket", "application/x-mobipocket-ebook", ".prc", "Wikipedia: Mobipocket");
    public readonly static MimeType Pre = new("Lotus Freelance", "application/vnd.lotus-freelance", ".pre", "IANA: Lotus Freelance");
    public readonly static MimeType Prf = new("PICSRules", "application/pics-rules", ".prf", "W3C PICSRules");
    public readonly static MimeType Psb = new("3rd Generation Partnership Project - Pic Small", "application/vnd.3gpp.pic-bw-small", ".psb", "3GPP");
    public readonly static MimeType Psd = new("Photoshop Document", "image/vnd.adobe.photoshop", ".psd", "Wikipedia: Photoshop Document");
    public readonly static MimeType Psf = new("PSF Fonts", "application/x-font-linux-psf", ".psf", "PSF Fonts");
    public readonly static MimeType Pskcxml = new("Portable Symmetric Key Container", "application/pskc+xml", ".pskcxml", "RFC 6030");
    public readonly static MimeType Ptid = new("Princeton Video Image", "application/vnd.pvi.ptid1", ".ptid", "IANA: Princeton Video Image");
    public readonly static MimeType Pub = new("Microsoft Publisher", "application/x-mspublisher", ".pub", "Wikipedia: Microsoft Publisher");
    public readonly static MimeType Pvb = new("3rd Generation Partnership Project - Pic Var", "application/vnd.3gpp.pic-bw-var", ".pvb", "3GPP");
    public readonly static MimeType Pwn = new("3M Post It Notes", "application/vnd.3m.post-it-notes", ".pwn", "IANA: 3M Post It Notes");
    public readonly static MimeType Pya = new("Microsoft PlayReady Ecosystem", "audio/vnd.ms-playready.media.pya", ".pya", "IANA: Microsoft PlayReady Ecosystem");
    public readonly static MimeType Pyv = new("Microsoft PlayReady Ecosystem Video", "video/vnd.ms-playready.media.pyv", ".pyv", "IANA: Microsoft PlayReady Ecosystem");
    public readonly static MimeType Qam = new("QuickAnime Player", "application/vnd.epson.quickanime", ".qam", "IANA: QuickAnime Player");
    public readonly static MimeType Qbo = new("Open Financial Exchange", "application/vnd.intu.qbo", ".qbo", "IANA: Open Financial Exchange");
    public readonly static MimeType Qfx = new("Quicken", "application/vnd.intu.qfx", ".qfx", "IANA: Quicken");
    public readonly static MimeType Qps = new("PubliShare Objects", "application/vnd.publishare-delta-tree", ".qps", "IANA: PubliShare Objects");
    public readonly static MimeType Qt = new("Quicktime Video", "video/quicktime", ".qt", "Wikipedia: Quicktime");
    public readonly static MimeType Qxd = new("QuarkXpress", "application/vnd.quark.quarkxpress", ".qxd", "IANA: QuarkXPress");
    public readonly static MimeType Ram = new("Real Audio Sound", "audio/x-pn-realaudio", ".ram", "Wikipedia: RealPlayer");
    public readonly static MimeType Rar = new("RAR Archive", "application/x-rar-compressed", ".rar", "Wikipedia: RAR");
    public readonly static MimeType Ras = new("CMU Image", "image/x-cmu-raster", ".ras", "");
    public readonly static MimeType Rcprofile = new("IP Unplugged Roaming Client", "application/vnd.ipunplugged.rcprofile", ".rcprofile", "IANA: IP Unplugged Roaming Client");
    public readonly static MimeType Rdf = new("Resource Description Framework", "application/rdf+xml", ".rdf", "RFC 3870");
    public readonly static MimeType Rdz = new("RemoteDocs R-Viewer", "application/vnd.data-vision.rdz", ".rdz", "IANA: Data-Vision");
    public readonly static MimeType Rep = new("BusinessObjects", "application/vnd.businessobjects", ".rep", "IANA: BusinessObjects");
    public readonly static MimeType Res = new("Digital Talking Book - Resource File", "application/x-dtbresource+xml", ".res", "Digital Talking Book");
    public readonly static MimeType Rgb = new("Silicon Graphics RGB Bitmap", "image/x-rgb", ".rgb", "RGB Image Format");
    public readonly static MimeType Rif = new("IMS Networks", "application/reginfo+xml", ".rif", "");
    public readonly static MimeType Rip = new("Hit'n'Mix", "audio/vnd.rip", ".rip", "IANA: Hit'n'Mix");
    public readonly static MimeType Rl = new("XML Resource Lists", "application/resource-lists+xml", ".rl", "RFC 4826");
    public readonly static MimeType Rlc = new("EDMICS 2000", "image/vnd.fujixerox.edmics-rlc", ".rlc", "IANA: EDMICS 2000");
    public readonly static MimeType Rld = new("XML Resource Lists Diff", "application/resource-lists-diff+xml", ".rld", "RFC 4826");
    public readonly static MimeType Rm = new("RealMedia", "application/vnd.rn-realmedia", ".rm", "");
    public readonly static MimeType Rmp = new("Real Audio Sound", "audio/x-pn-realaudio-plugin", ".rmp", "Wikipedia: RealPlayer");
    public readonly static MimeType Rms = new("Mobile Information Device Profile", "application/vnd.jcp.javame.midlet-rms", ".rms", "IANA: Mobile Information Device Profile");
    public readonly static MimeType Rnc = new("Relax NG Compact Syntax", "application/relax-ng-compact-syntax", ".rnc", "Relax NG");
    public readonly static MimeType Rp9 = new("RetroPlatform Player", "application/vnd.cloanto.rp9", ".rp9", "IANA: RetroPlatform Player");
    public readonly static MimeType Rpss = new("Nokia Radio Application - Preset", "application/vnd.nokia.radio-presets", ".rpss", "IANA: Nokia Radio Application");
    public readonly static MimeType Rpst = new("Nokia Radio Application - Preset", "application/vnd.nokia.radio-preset", ".rpst", "IANA: Nokia Radio Application");
    public readonly static MimeType Rq = new("SPARQL - Query", "application/sparql-query", ".rq", "W3C SPARQL");
    public readonly static MimeType Rs = new("XML Resource Lists", "application/rls-services+xml", ".rs", "RFC 4826");
    public readonly static MimeType Rsd = new("Really Simple Discovery", "application/rsd+xml", ".rsd", "Wikipedia: Really Simple Discovery");
    public readonly static MimeType Rssxml = new("RSS - Really Simple Syndication", "application/rss+xml", ".rss, .xml", "Wikipedia: RSS");
    public readonly static MimeType Rtf = new("Rich Text Format", "application/rtf", ".rtf", "Wikipedia: Rich Text Format");
    public readonly static MimeType Rtx = new("Rich Text Format (RTF)", "text/richtext", ".rtx", "Wikipedia: Rich Text Format");
    public readonly static MimeType S = new("Assembler Source File", "text/x-asm", ".s", "Wikipedia: Assembly");
    public readonly static MimeType Saf = new("SMAF Audio", "application/vnd.yamaha.smaf-audio", ".saf", "IANA: SMAF Audio");
    public readonly static MimeType Sbml = new("Systems Biology Markup Language", "application/sbml+xml", ".sbml", "RFC 3823");
    public readonly static MimeType Sc = new("IBM Electronic Media Management System - Secure Container", "application/vnd.ibm.secure-container", ".sc", "IANA: EMMS");
    public readonly static MimeType Scd = new("Microsoft Schedule+", "application/x-msschedule", ".scd", "Wikipedia: Microsoft Schedule Plus");
    public readonly static MimeType Scm = new("Lotus Screencam", "application/vnd.lotus-screencam", ".scm", "IANA: Lotus Screencam");
    public readonly static MimeType Scq = new("Server-Based Certificate Validation Protocol - Validation Request", "application/scvp-cv-request", ".scq", "RFC 5055");
    public readonly static MimeType Scs = new("Server-Based Certificate Validation Protocol - Validation Response", "application/scvp-cv-response", ".scs", "RFC 5055");
    public readonly static MimeType Scurl = new("Curl - Source Code", "text/vnd.curl.scurl", ".scurl", "Curl Source Code");
    public readonly static MimeType Sda = new("StarOffice - Draw", "application/vnd.stardivision.draw", ".sda", "");
    public readonly static MimeType Sdc = new("StarOffice - Calc", "application/vnd.stardivision.calc", ".sdc", "");
    public readonly static MimeType Sdd = new("StarOffice - Impress", "application/vnd.stardivision.impress", ".sdd", "");
    public readonly static MimeType Sdkm = new("SudokuMagic", "application/vnd.solent.sdkm+xml", ".sdkm", "IANA: SudokuMagic");
    public readonly static MimeType Sdp = new("Session Description Protocol", "application/sdp", ".sdp", "RFC 2327");
    public readonly static MimeType Sdw = new("StarOffice - Writer", "application/vnd.stardivision.writer", ".sdw", "");
    public readonly static MimeType See = new("SeeMail", "application/vnd.seemail", ".see", "IANA: SeeMail");
    public readonly static MimeType Seed = new("Digital Siesmograph Networks - SEED Datafiles", "application/vnd.fdsn.seed", ".seed", "IANA: SEED");
    public readonly static MimeType Sema = new("Secured eMail", "application/vnd.sema", ".sema", "IANA: Secured eMail");
    public readonly static MimeType Semd = new("Secured eMail", "application/vnd.semd", ".semd", "IANA: Secured eMail");
    public readonly static MimeType Semf = new("Secured eMail", "application/vnd.semf", ".semf", "IANA: Secured eMail");
    public readonly static MimeType Ser = new("Java Serialized Object", "application/java-serialized-object", ".ser", "Java Serialization API");
    public readonly static MimeType Setpay = new("Secure Electronic Transaction - Payment", "application/set-payment-initiation", ".setpay", "IANA: SET Payment");
    public readonly static MimeType Setreg = new("Secure Electronic Transaction - Registration", "application/set-registration-initiation", ".setreg", "IANA: SET Registration");
    public readonly static MimeType Sfdhdstx = new("Hydrostatix Master Suite", "application/vnd.hydrostatix.sof-data", ".sfd-hdstx", "IANA: Hydrostatix Master Suite");
    public readonly static MimeType Sfs = new("TIBCO Spotfire", "application/vnd.spotfire.sfs", ".sfs", "IANA: TIBCO Spotfire");
    public readonly static MimeType Sgl = new("StarOffice - Writer  (Global)", "application/vnd.stardivision.writer-global", ".sgl", "");
    public readonly static MimeType Sgml = new("Standard Generalized Markup Language (SGML)", "text/sgml", ".sgml", "Wikipedia: SGML");
    public readonly static MimeType Sh = new("Bourne Shell Script", "application/x-sh", ".sh", "Wikipedia: Bourne Shell");
    public readonly static MimeType Shar = new("Shell Archive", "application/x-shar", ".shar", "Wikipedia: Shell Archie");
    public readonly static MimeType Shf = new("S Hexdump Format", "application/shf+xml", ".shf", "RFC 4194");
    public readonly static MimeType Sis = new("Symbian Install Package", "application/vnd.symbian.install", ".sis", "IANA: Symbian Install");
    public readonly static MimeType Sit = new("Stuffit Archive", "application/x-stuffit", ".sit", "Wikipedia: Stuffit");
    public readonly static MimeType Sitx = new("Stuffit Archive", "application/x-stuffitx", ".sitx", "Wikipedia: Stuffit");
    public readonly static MimeType Skp = new("SSEYO Koan Play File", "application/vnd.koan", ".skp", "IANA: SSEYO Koan Play File");
    public readonly static MimeType Sldm = new("Microsoft PowerPoint - Macro-Enabled Open XML Slide", "application/vnd.ms-powerpoint.slide.macroenabled.12", ".sldm", "IANA: MS PowerPoint");
    public readonly static MimeType Sldx = new("Microsoft Office - OOXML - Presentation (Slide)", "application/vnd.openxmlformats-officedocument.presentationml.slide", ".sldx", "IANA: OOXML - Presentation");
    public readonly static MimeType Slt = new("SimpleAnimeLite Player", "application/vnd.epson.salt", ".slt", "IANA: SimpleAnimeLite Player");
    public readonly static MimeType Sm = new("StepMania", "application/vnd.stepmania.stepchart", ".sm", "IANA: StepMania");
    public readonly static MimeType Smf = new("StarOffice - Math", "application/vnd.stardivision.math", ".smf", "");
    public readonly static MimeType Smi = new("Synchronized Multimedia Integration Language", "application/smil+xml", ".smi", "RFC 4536");
    public readonly static MimeType Snf = new("Server Normal Format", "application/x-font-snf", ".snf", "Wikipedia: Server Normal Format");
    public readonly static MimeType Spf = new("SMAF Phrase", "application/vnd.yamaha.smaf-phrase", ".spf", "IANA: SMAF Phrase");
    public readonly static MimeType Spl = new("FutureSplash Animator", "application/x-futuresplash", ".spl", "Wikipedia: FutureSplash Animator");
    public readonly static MimeType Spot = new("In3D - 3DML", "text/vnd.in3d.spot", ".spot", "IANA: In3D");
    public readonly static MimeType Spp = new("Server-Based Certificate Validation Protocol - Validation Policies - Response", "application/scvp-vp-response", ".spp", "RFC 5055");
    public readonly static MimeType Spq = new("Server-Based Certificate Validation Protocol - Validation Policies - Request", "application/scvp-vp-request", ".spq", "RFC 5055");
    public readonly static MimeType Src = new("WAIS Source", "application/x-wais-source", ".src", "YoLinux");
    public readonly static MimeType Sru = new("Search/Retrieve via URL Response Format", "application/sru+xml", ".sru", "RFC 6207");
    public readonly static MimeType Srx = new("SPARQL - Results", "application/sparql-results+xml", ".srx", "W3C SPARQL");
    public readonly static MimeType Sse = new("Kodak Storyshare", "application/vnd.kodak-descriptor", ".sse", "IANA: Kodak Storyshare");
    public readonly static MimeType Ssf = new("QUASS Stream Player", "application/vnd.epson.ssf", ".ssf", "IANA: QUASS Stream Player");
    public readonly static MimeType Ssml = new("Speech Synthesis Markup Language", "application/ssml+xml", ".ssml", "W3C Speech Synthesis");
    public readonly static MimeType St = new("SailingTracker", "application/vnd.sailingtracker.track", ".st", "IANA: SailingTracker");
    public readonly static MimeType Stc = new("OpenOffice - Calc Template (Spreadsheet)", "application/vnd.sun.xml.calc.template", ".stc", "Wikipedia: OpenOffice");
    public readonly static MimeType Std = new("OpenOffice - Draw Template (Graphics)", "application/vnd.sun.xml.draw.template", ".std", "Wikipedia: OpenOffice");
    public readonly static MimeType Stf = new("Worldtalk", "application/vnd.wt.stf", ".stf", "IANA: Worldtalk");
    public readonly static MimeType Sti = new("OpenOffice - Impress Template (Presentation)", "application/vnd.sun.xml.impress.template", ".sti", "Wikipedia: OpenOffice");
    public readonly static MimeType Stk = new("Hyperstudio", "application/hyperstudio", ".stk", "IANA - Hyperstudio");
    public readonly static MimeType Stl = new("Microsoft Trust UI Provider - Certificate Trust Link", "application/vnd.ms-pki.stl", ".stl", "IANA: MS Trust UI Provider");
    public readonly static MimeType Str = new("Proprietary P&G Standard Reporting System", "application/vnd.pg.format", ".str", "IANA: Proprietary P&G Standard Reporting System");
    public readonly static MimeType Stw = new("OpenOffice - Writer Template (Text - HTML)", "application/vnd.sun.xml.writer.template", ".stw", "Wikipedia: OpenOffice");
    public readonly static MimeType Sub = new("Close Captioning - Subtitle", "image/vnd.dvb.subtitle", ".sub", "Wikipedia: Closed Captioning");
    public readonly static MimeType Sus = new("ScheduleUs", "application/vnd.sus-calendar", ".sus", "IANA: ScheduleUs");
    public readonly static MimeType Sv4cpio = new("System V Release 4 CPIO Archive", "application/x-sv4cpio", ".sv4cpio", "Wikipedia: pax");
    public readonly static MimeType Sv4crc = new("System V Release 4 CPIO Checksum Data", "application/x-sv4crc", ".sv4crc", "Wikipedia: pax");
    public readonly static MimeType Svc = new("Digital Video Broadcasting", "application/vnd.dvb.service", ".svc", "IANA: Digital Video Broadcasting");
    public readonly static MimeType Svd = new("SourceView Document", "application/vnd.svd", ".svd", "IANA: SourceView Document");
    public readonly static MimeType Svg = new("Scalable Vector Graphics (SVG)", "image/svg+xml", ".svg", "Wikipedia: SVG");
    public readonly static MimeType Swf = new("Adobe Flash", "application/x-shockwave-flash", ".swf", "Wikipedia: Adobe Flash");
    public readonly static MimeType Swi = new("Arista Networks Software Image", "application/vnd.aristanetworks.swi", ".swi", "IANA: Arista Networks Software Image");
    public readonly static MimeType Sxc = new("OpenOffice - Calc (Spreadsheet)", "application/vnd.sun.xml.calc", ".sxc", "Wikipedia: OpenOffice");
    public readonly static MimeType Sxd = new("OpenOffice - Draw (Graphics)", "application/vnd.sun.xml.draw", ".sxd", "Wikipedia: OpenOffice");
    public readonly static MimeType Sxg = new("OpenOffice - Writer (Text - HTML)", "application/vnd.sun.xml.writer.global", ".sxg", "Wikipedia: OpenOffice");
    public readonly static MimeType Sxi = new("OpenOffice - Impress (Presentation)", "application/vnd.sun.xml.impress", ".sxi", "Wikipedia: OpenOffice");
    public readonly static MimeType Sxm = new("OpenOffice - Math (Formula)", "application/vnd.sun.xml.math", ".sxm", "Wikipedia: OpenOffice");
    public readonly static MimeType Sxw = new("OpenOffice - Writer (Text - HTML)", "application/vnd.sun.xml.writer", ".sxw", "Wikipedia: OpenOffice");
    public readonly static MimeType T = new("troff", "text/troff", ".t", "Wikipedia: troff");
    public readonly static MimeType Tao = new("Tao Intent", "application/vnd.tao.intent-module-archive", ".tao", "IANA: Tao Intent");
    public readonly static MimeType Tar = new("Tar File (Tape Archive)", "application/x-tar", ".tar", "Wikipedia: Tar");
    public readonly static MimeType Tcap = new("3rd Generation Partnership Project - Transaction Capabilities Application Part", "application/vnd.3gpp2.tcap", ".tcap", "3GPP");
    public readonly static MimeType Tcl = new("Tcl Script", "application/x-tcl", ".tcl", "Wikipedia: Tcl");
    public readonly static MimeType Teacher = new("SMART Technologies Apps", "application/vnd.smart.teacher", ".teacher", "IANA: SMART Technologies Apps");
    public readonly static MimeType Tei = new("Text Encoding and Interchange", "application/tei+xml", ".tei", "RFC 6129");
    public readonly static MimeType Tex = new("TeX", "application/x-tex", ".tex", "Wikipedia: TeX");
    public readonly static MimeType Texinfo = new("GNU Texinfo Document", "application/x-texinfo", ".texinfo", "Wikipedia: Texinfo");
    public readonly static MimeType Tfi = new("Sharing Transaction Fraud Data", "application/thraud+xml", ".tfi", "RFC 5941");
    public readonly static MimeType Tfm = new("TeX Font Metric", "application/x-tex-tfm", ".tfm", "Wikipedia: TeX Font Metric");
    public readonly static MimeType Thmx = new("Microsoft Office System Release Theme", "application/vnd.ms-officetheme", ".thmx", "IANA: MS Office System Release Theme");
    public readonly static MimeType Tiff = new("Tagged Image File Format", "image/tiff", ".tiff", "Wikipedia: TIFF");
    public readonly static MimeType Tmo = new("MobileTV", "application/vnd.tmobile-livetv", ".tmo", "IANA: MobileTV");
    public readonly static MimeType Torrent = new("BitTorrent", "application/x-bittorrent", ".torrent", "Wikipedia: BitTorrent");
    public readonly static MimeType Tpl = new("Groove - Tool Template", "application/vnd.groove-tool-template", ".tpl", "IANA: Groove");
    public readonly static MimeType Tpt = new("TRI Systems Config", "application/vnd.trid.tpt", ".tpt", "IANA: TRI Systems");
    public readonly static MimeType Tra = new("True BASIC", "application/vnd.trueapp", ".tra", "IANA: True BASIC");
    public readonly static MimeType Trm = new("Microsoft Windows Terminal Services", "application/x-msterminal", ".trm", "Wikipedia: Terminal Server");
    public readonly static MimeType Tsd = new("Time Stamped Data Envelope", "application/timestamped-data", ".tsd", "RFC 5955");
    public readonly static MimeType Tsv = new("Tab Seperated Values", "text/tab-separated-values", ".tsv", "Wikipedia: TSV");
    public readonly static MimeType Ttf = new("TrueType Font", "application/x-font-ttf", ".ttf", "Wikipedia: TrueType");
    public readonly static MimeType Ttl = new("Turtle (Terse RDF Triple Language)", "text/turtle", ".ttl", "Wikipedia: Turtle");
    public readonly static MimeType Twd = new("SimTech MindMapper", "application/vnd.simtech-mindmapper", ".twd", "IANA: SimTech MindMapper");
    public readonly static MimeType Txd = new("Genomatix Tuxedo Framework", "application/vnd.genomatix.tuxedo", ".txd", "IANA: Genomatix Tuxedo Framework");
    public readonly static MimeType Txf = new("Mobius Management Systems - Topic Index File", "application/vnd.mobius.txf", ".txf", "IANA: Mobius Management Systems");
    public readonly static MimeType Txt = new("Text File", "text/plain", ".txt", "Wikipedia: Text File");
    public readonly static MimeType Ufd = new("Universal Forms Description Language", "application/vnd.ufdl", ".ufd", "IANA: Universal Forms Description Language");
    public readonly static MimeType Umj = new("UMAJIN", "application/vnd.umajin", ".umj", "IANA: UMAJIN");
    public readonly static MimeType Unityweb = new("Unity 3d", "application/vnd.unity", ".unityweb", "IANA: Unity 3d");
    public readonly static MimeType Uoml = new("Unique Object Markup Language", "application/vnd.uoml+xml", ".uoml", "IANA: UOML");
    public readonly static MimeType Uri = new("URI Resolution Services", "text/uri-list", ".uri", "RFC 2483");
    public readonly static MimeType Ustar = new("Ustar (Uniform Standard Tape Archive)", "application/x-ustar", ".ustar", "Wikipedia: Ustar");
    public readonly static MimeType Utz = new("User Interface Quartz - Theme (Symbian)", "application/vnd.uiq.theme", ".utz", "IANA: User Interface Quartz");
    public readonly static MimeType Uu = new("UUEncode", "text/x-uuencode", ".uu", "Wikipedia: UUEncode");
    public readonly static MimeType Uva = new("DECE Audio", "audio/vnd.dece.audio", ".uva", "IANA: Dece Audio");
    public readonly static MimeType Uvh = new("DECE High Definition Video", "video/vnd.dece.hd", ".uvh", "IANA: DECE HD Video");
    public readonly static MimeType Uvi = new("DECE Graphic", "image/vnd.dece.graphic", ".uvi", "IANA: DECE Graphic");
    public readonly static MimeType Uvm = new("DECE Mobile Video", "video/vnd.dece.mobile", ".uvm", "IANA: DECE Mobile Video");
    public readonly static MimeType Uvp = new("DECE PD Video", "video/vnd.dece.pd", ".uvp", "IANA: DECE PD Video");
    public readonly static MimeType Uvs = new("DECE SD Video", "video/vnd.dece.sd", ".uvs", "IANA: DECE SD Video");
    public readonly static MimeType Uvu = new("DECE MP4", "video/vnd.uvvu.mp4", ".uvu", "IANA: DECE MP4");
    public readonly static MimeType Uvv = new("DECE Video", "video/vnd.dece.video", ".uvv", "IANA: DECE Video");
    public readonly static MimeType Vcd = new("Video CD", "application/x-cdlink", ".vcd", "Wikipedia: Video CD");
    public readonly static MimeType Vcf = new("vCard", "text/x-vcard", ".vcf", "Wikipedia: vCard");
    public readonly static MimeType Vcg = new("Groove - Vcard", "application/vnd.groove-vcard", ".vcg", "IANA: Groove");
    public readonly static MimeType Vcs = new("vCalendar", "text/x-vcalendar", ".vcs", "Wikipedia: vCalendar");
    public readonly static MimeType Vcx = new("VirtualCatalog", "application/vnd.vcx", ".vcx", "IANA: VirtualCatalog");
    public readonly static MimeType Vis = new("Visionary", "application/vnd.visionary", ".vis", "IANA: Visionary");
    public readonly static MimeType Viv = new("Vivo", "video/vnd.vivo", ".viv", "IANA: Vivo");
    public readonly static MimeType Vsd = new("Microsoft Visio", "application/vnd.visio", ".vsd", "IANA: Visio");
    public readonly static MimeType Vsdx = new("Microsoft Visio 2013", "application/vnd.visio2013", ".vsdx", "IANA: Visio");
    public readonly static MimeType Vsf = new("Viewport+", "application/vnd.vsf", ".vsf", "IANA: Viewport+");
    public readonly static MimeType Vtu = new("Virtue VTU", "model/vnd.vtu", ".vtu", "IANA: VTU");
    public readonly static MimeType Vxml = new("VoiceXML", "application/voicexml+xml", ".vxml", "RFC 4267");
    public readonly static MimeType Wad = new("Doom Video Game", "application/x-doom", ".wad", "Wikipedia: Doom WAD");
    public readonly static MimeType Wav = new("Waveform Audio File Format (WAV)", "audio/x-wav", ".wav", "Wikipedia: WAV");
    public readonly static MimeType Wax = new("Microsoft Windows Media Audio Redirector", "audio/x-ms-wax", ".wax", "Windows Media Metafiles");
    public readonly static MimeType Wbmp = new("WAP Bitamp (WBMP)", "image/vnd.wap.wbmp", ".wbmp", "IANA: WBMP");
    public readonly static MimeType Wbs = new("Critical Tools - PERT Chart EXPERT", "application/vnd.criticaltools.wbs+xml", ".wbs", "IANA: Critical Tools");
    public readonly static MimeType Wbxml = new("WAP Binary XML (WBXML)", "application/vnd.wap.wbxml", ".wbxml", "IANA: WBXML");
    public readonly static MimeType Weba = new("Open Web Media Project - Audio", "audio/webm", ".weba", "WebM Project");
    public readonly static MimeType Webm = new("Open Web Media Project - Video", "video/webm", ".webm", "WebM Project");
    public readonly static MimeType Webp = new("WebP Image", "image/webp", ".webp", "Wikipedia: WebP");
    public readonly static MimeType Wg = new("Qualcomm's Plaza Mobile Internet", "application/vnd.pmi.widget", ".wg", "IANA: Qualcomm's Plaza Mobile Internet");
    public readonly static MimeType Wgt = new("Widget Packaging and XML Configuration", "application/widget", ".wgt", "W3C Widget Packaging and XML Configuration");
    public readonly static MimeType Wm = new("Microsoft Windows Media", "video/x-ms-wm", ".wm", "Wikipedia: Advanced Systems Format (ASF)");
    public readonly static MimeType Wma = new("Microsoft Windows Media Audio", "audio/x-ms-wma", ".wma", "Wikipedia: Windows Media Audio");
    public readonly static MimeType Wmd = new("Microsoft Windows Media Player Download Package", "application/x-ms-wmd", ".wmd", "Wikipedia: Windows Media Player");
    public readonly static MimeType Wmf = new("Microsoft Windows Metafile", "application/x-msmetafile", ".wmf", "Wikipedia: Windows Metafile");
    public readonly static MimeType Wml = new("Wireless Markup Language (WML)", "text/vnd.wap.wml", ".wml", "Wikipedia: WML");
    public readonly static MimeType Wmlc = new("Compiled Wireless Markup Language (WMLC)", "application/vnd.wap.wmlc", ".wmlc", "IANA: WMLC");
    public readonly static MimeType Wmls = new("Wireless Markup Language Script (WMLScript)", "text/vnd.wap.wmlscript", ".wmls", "Wikipedia: WMLScript");
    public readonly static MimeType Wmlsc = new("WMLScript", "application/vnd.wap.wmlscriptc", ".wmlsc", "IANA: WMLScript");
    public readonly static MimeType Wmv = new("Microsoft Windows Media Video", "video/x-ms-wmv", ".wmv", "Wikipedia: Advanced Systems Format (ASF)");
    public readonly static MimeType Wmx = new("Microsoft Windows Media Audio/Video Playlist", "video/x-ms-wmx", ".wmx", "Wikipedia: Advanced Systems Format (ASF)");
    public readonly static MimeType Wmz = new("Microsoft Windows Media Player Skin Package", "application/x-ms-wmz", ".wmz", "Wikipedia: Windows Media Player");
    public readonly static MimeType Woff = new("Web Open Font Format", "application/x-font-woff", ".woff", "Wikipedia: Web Open Font Format");
    public readonly static MimeType Wpd = new("Wordperfect", "application/vnd.wordperfect", ".wpd", "IANA: Wordperfect");
    public readonly static MimeType Wpl = new("Microsoft Windows Media Player Playlist", "application/vnd.ms-wpl", ".wpl", "IANA: MS Windows Media Player Playlist");
    public readonly static MimeType Wps = new("Microsoft Works", "application/vnd.ms-works", ".wps", "IANA: MS Works");
    public readonly static MimeType Wqd = new("SundaHus WQ", "application/vnd.wqd", ".wqd", "IANA: SundaHus WQ");
    public readonly static MimeType Wri = new("Microsoft Wordpad", "application/x-mswrite", ".wri", "Wikipedia: Wordpad");
    public readonly static MimeType Wrl = new("Virtual Reality Modeling Language", "model/vrml", ".wrl", "Wikipedia: VRML");
    public readonly static MimeType Wsdl = new("WSDL - Web Services Description Language", "application/wsdl+xml", ".wsdl", "W3C Web Service Description Language");
    public readonly static MimeType Wspolicy = new("Web Services Policy", "application/wspolicy+xml", ".wspolicy", "W3C Web Services Policy");
    public readonly static MimeType Wtb = new("WebTurbo", "application/vnd.webturbo", ".wtb", "IANA: WebTurbo");
    public readonly static MimeType Wvx = new("Microsoft Windows Media Video Playlist", "video/x-ms-wvx", ".wvx", "Wikipedia: Advanced Systems Format (ASF)");
    public readonly static MimeType X3d = new("3D Crossword Plugin", "application/vnd.hzn-3d-crossword", ".x3d", "IANA: 3D Crossword Plugin");
    public readonly static MimeType Xap = new("Microsoft Silverlight", "application/x-silverlight-app", ".xap", "Wikipedia: Silverlight");
    public readonly static MimeType Xar = new("CorelXARA", "application/vnd.xara", ".xar", "IANA: CorelXARA");
    public readonly static MimeType Xbap = new("Microsoft XAML Browser Application", "application/x-ms-xbap", ".xbap", "Wikipedia: XAML Browser");
    public readonly static MimeType Xbd = new("Fujitsu - Xerox DocuWorks Binder", "application/vnd.fujixerox.docuworks.binder", ".xbd", "IANA: Docuworks Binder");
    public readonly static MimeType Xbm = new("X BitMap", "image/x-xbitmap", ".xbm", "Wikipedia: X BitMap");
    public readonly static MimeType Xdf = new("XML Configuration Access Protocol - XCAP Diff", "application/xcap-diff+xml", ".xdf", "Wikipedia: XCAP");
    public readonly static MimeType Xdm = new("SyncML - Device Management", "application/vnd.syncml.dm+xml", ".xdm", "IANA: SyncML");
    public readonly static MimeType Xdp = new("Adobe XML Data Package", "application/vnd.adobe.xdp+xml", ".xdp", "Wikipedia: XML Data Package");
    public readonly static MimeType Xdssc = new("Data Structure for the Security Suitability of Cryptographic Algorithms", "application/dssc+xml", ".xdssc", "RFC 5698");
    public readonly static MimeType Xdw = new("Fujitsu - Xerox DocuWorks", "application/vnd.fujixerox.docuworks", ".xdw", "IANA: Docuworks");
    public readonly static MimeType Xenc = new("XML Encryption Syntax and Processing", "application/xenc+xml", ".xenc", "W3C XML Encryption Syntax and Processing");
    public readonly static MimeType Xer = new("XML Patch Framework", "application/patch-ops-error+xml", ".xer", "RFC 5261");
    public readonly static MimeType Xfdf = new("Adobe XML Forms Data Format", "application/vnd.adobe.xfdf", ".xfdf", "Wikipedia: XML Portable Document Format");
    public readonly static MimeType Xfdl = new("Extensible Forms Description Language", "application/vnd.xfdl", ".xfdl", "IANA: Extensible Forms Description Language");
    public readonly static MimeType Xhtml = new("XHTML - The Extensible HyperText Markup Language", "application/xhtml+xml", ".xhtml", "W3C XHTML");
    public readonly static MimeType Xif = new("eXtended Image File Format (XIFF)", "image/vnd.xiff", ".xif", "IANA: XIFF");
    public readonly static MimeType Xlam = new("Microsoft Excel - Add-In File", "application/vnd.ms-excel.addin.macroenabled.12", ".xlam", "IANA: MS Excel");
    public readonly static MimeType Xls = new("Microsoft Excel", "application/vnd.ms-excel", ".xls", "IANA: MS Excel");
    public readonly static MimeType Xlsb = new("Microsoft Excel - Binary Workbook", "application/vnd.ms-excel.sheet.binary.macroenabled.12", ".xlsb", "IANA: MS Excel");
    public readonly static MimeType Xlsm = new("Microsoft Excel - Macro-Enabled Workbook", "application/vnd.ms-excel.sheet.macroenabled.12", ".xlsm", "IANA: MS Excel");
    public readonly static MimeType Xlsx = new("Microsoft Office - OOXML - Spreadsheet", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", ".xlsx", "IANA: OOXML - Spreadsheet");
    public readonly static MimeType Xltm = new("Microsoft Excel - Macro-Enabled Template File", "application/vnd.ms-excel.template.macroenabled.12", ".xltm", "IANA: MS Excel");
    public readonly static MimeType Xltx = new("Microsoft Office - OOXML - Spreadsheet Template", "application/vnd.openxmlformats-officedocument.spreadsheetml.template", ".xltx", "IANA: OOXML - Spreadsheet Template");
    public readonly static MimeType Xml = new("XML - Extensible Markup Language", "application/xml", ".xml", "W3C XML");
    public readonly static MimeType Xo = new("Sugar Linux Application Bundle", "application/vnd.olpc-sugar", ".xo", "IANA: Sugar Linux App Bundle");
    public readonly static MimeType Xop = new("XML-Binary Optimized Packaging", "application/xop+xml", ".xop", "W3C XOP");
    public readonly static MimeType Xpi = new("XPInstall - Mozilla", "application/x-xpinstall", ".xpi", "Wikipedia: XPI");
    public readonly static MimeType Xpm = new("X PixMap", "image/x-xpixmap", ".xpm", "Wikipedia: X PixMap");
    public readonly static MimeType Xpr = new("Express by Infoseek", "application/vnd.is-xpr", ".xpr", "IANA: Express by Infoseek");
    public readonly static MimeType Xps = new("Microsoft XML Paper Specification", "application/vnd.ms-xpsdocument", ".xps", "IANA: MS XML Paper Specification");
    public readonly static MimeType Xpw = new("Intercon FormNet", "application/vnd.intercon.formnet", ".xpw", "IANA: Intercon FormNet");
    public readonly static MimeType Xslt = new("XML Transformations", "application/xslt+xml", ".xslt", "W3C XSLT");
    public readonly static MimeType Xsm = new("SyncML", "application/vnd.syncml+xml", ".xsm", "IANA: SyncML");
    public readonly static MimeType Xspf = new("XSPF - XML Shareable Playlist Format", "application/xspf+xml", ".xspf", "XML Shareable Playlist Format");
    public readonly static MimeType Xul = new("XUL - XML User Interface Language", "application/vnd.mozilla.xul+xml", ".xul", "IANA: XUL");
    public readonly static MimeType Xwd = new("X Window Dump", "image/x-xwindowdump", ".xwd", "Wikipedia: X Window Dump");
    public readonly static MimeType Xyz = new("XYZ File Format", "chemical/x-xyz", ".xyz", "Wikipedia: XYZ File Format");
    public readonly static MimeType Yaml = new("YAML Ain't Markup Language / Yet Another Markup Language", "text/yaml", ".yaml", "YAML: YAML Ain't Markup Language");
    public readonly static MimeType Yang = new("YANG Data Modeling Language", "application/yang", ".yang", "Wikipedia: YANG");
    public readonly static MimeType Yin = new("YIN (YANG - XML)", "application/yin+xml", ".yin", "Wikipedia: YANG");
    public readonly static MimeType Zaz = new("Zzazz Deck", "application/vnd.zzazz.deck+xml", ".zaz", "IANA: Zzazz");
    public readonly static MimeType Zip = new("Zip Archive", "application/zip", ".zip", "Wikipedia: Zip");
    public readonly static MimeType Zir = new("Z.U.L. Geometry", "application/vnd.zul", ".zir", "IANA: Z.U.L.");
    public readonly static MimeType Zmm = new("ZVUE Media Manager", "application/vnd.handheld-entertainment+xml", ".zmm", "IANA: ZVUE Media Manager");
    public readonly static MimeType Aab = new("Adobe (Macropedia) Authorware - Binary File", "application/x-authorware-bin", ".aab", "Wikipedia: Authorware");
    public readonly static MimeType Aac = new("Advanced Audio Coding (AAC)", "audio/x-aac", ".aac", "Wikipedia: AAC");
    public readonly static MimeType Aam = new("Adobe (Macropedia) Authorware - Map", "application/x-authorware-map", ".aam", "Wikipedia: Authorware");
    public readonly static MimeType Aas = new("Adobe (Macropedia) Authorware - Segment File", "application/x-authorware-seg", ".aas", "Wikipedia: Authorware");
    public readonly static MimeType NA = new("Andrew Toolkit", "application/andrew-inset", "N/A", "IANA - Andrew Inset");
    public IEnumerator<MimeType> GetEnumerator()
    {
        yield return _123;
        yield return _3dml;
        yield return _3g2;
        yield return _3gp;
        yield return _7z;
        yield return Abw;
        yield return Ac;
        yield return Acc;
        yield return Ace;
        yield return Acu;
        yield return Adp;
        yield return Aep;
        yield return Afp;
        yield return Ahead;
        yield return Ai;
        yield return Aif;
        yield return Air;
        yield return Ait;
        yield return Ami;
        yield return Apk;
        yield return Application;
        yield return Apr;
        yield return Asf;
        yield return Aso;
        yield return Atc;
        yield return Atomxml;
        yield return Atomcat;
        yield return Atomsvc;
        yield return Atx;
        yield return Au;
        yield return Avi;
        yield return Aw;
        yield return Azf;
        yield return Azs;
        yield return Azw;
        yield return Bcpio;
        yield return Bdf;
        yield return Bdm;
        yield return Bed;
        yield return Bh2;
        yield return Bin;
        yield return Bmi;
        yield return Bmp;
        yield return Box;
        yield return Btif;
        yield return Bz;
        yield return Bz2;
        yield return C;
        yield return C11amc;
        yield return C11amz;
        yield return C4g;
        yield return Cab;
        yield return Car;
        yield return Cat;
        yield return Ccxml;
        yield return Cdbcmsg;
        yield return Cdkey;
        yield return Cdmia;
        yield return Cdmic;
        yield return Cdmid;
        yield return Cdmio;
        yield return Cdmiq;
        yield return Cdx;
        yield return Cdxml;
        yield return Cdy;
        yield return Cer;
        yield return Cgm;
        yield return Chat;
        yield return Chm;
        yield return Chrt;
        yield return Cif;
        yield return Cii;
        yield return Cil;
        yield return Cla;
        yield return Class;
        yield return Clkk;
        yield return Clkp;
        yield return Clkt;
        yield return Clkw;
        yield return Clkx;
        yield return Clp;
        yield return Cmc;
        yield return Cmdf;
        yield return Cml;
        yield return Cmp;
        yield return Cmx;
        yield return Cod;
        yield return Cpio;
        yield return Cpt;
        yield return Crd;
        yield return Crl;
        yield return Cryptonote;
        yield return Csh;
        yield return Csml;
        yield return Csp;
        yield return Css;
        yield return Csv;
        yield return Cu;
        yield return Curl;
        yield return Cww;
        yield return Dae;
        yield return Daf;
        yield return Davmount;
        yield return Dcurl;
        yield return Dd2;
        yield return Ddd;
        yield return Deb;
        yield return Der;
        yield return Dfac;
        yield return Dir;
        yield return Dis;
        yield return Djvu;
        yield return Dmg;
        yield return Dna;
        yield return Doc;
        yield return Docm;
        yield return Docx;
        yield return Dotm;
        yield return Dotx;
        yield return Dp;
        yield return Dpg;
        yield return Dra;
        yield return Dsc;
        yield return Dssc;
        yield return Dtb;
        yield return Dtd;
        yield return Dts;
        yield return Dtshd;
        yield return Dvi;
        yield return Dwf;
        yield return Dwg;
        yield return Dxf;
        yield return Dxp;
        yield return Ecelp4800;
        yield return Ecelp7470;
        yield return Ecelp9600;
        yield return Edm;
        yield return Edx;
        yield return Efif;
        yield return Ei6;
        yield return Eml;
        yield return Emma;
        yield return Eol;
        yield return Eot;
        yield return Epub;
        yield return Es;
        yield return Es3;
        yield return Esf;
        yield return Etx;
        yield return Exe;
        yield return Exi;
        yield return Ext;
        yield return Ez2;
        yield return Ez3;
        yield return F;
        yield return F4v;
        yield return Fbs;
        yield return Fcs;
        yield return Fdf;
        yield return Felaunch;
        yield return Fg5;
        yield return Fh;
        yield return Fig;
        yield return Fli;
        yield return Flo;
        yield return Flv;
        yield return Flw;
        yield return Flx;
        yield return Fly;
        yield return Fm;
        yield return Fnc;
        yield return Fpx;
        yield return Fsc;
        yield return Fst;
        yield return Ftc;
        yield return Fti;
        yield return Fvt;
        yield return Fxp;
        yield return Fzs;
        yield return G2w;
        yield return G3;
        yield return G3w;
        yield return Gac;
        yield return Gdl;
        yield return Geo;
        yield return Gex;
        yield return Ggb;
        yield return Ggt;
        yield return Ghf;
        yield return Gif;
        yield return Gim;
        yield return Gmx;
        yield return Gnumeric;
        yield return Gph;
        yield return Gqf;
        yield return Gram;
        yield return Grv;
        yield return Grxml;
        yield return Gsf;
        yield return Gtar;
        yield return Gtm;
        yield return Gtw;
        yield return Gv;
        yield return Gxt;
        yield return H261;
        yield return H263;
        yield return H264;
        yield return Hal;
        yield return Hbci;
        yield return Hdf;
        yield return Hlp;
        yield return Hpgl;
        yield return Hpid;
        yield return Hps;
        yield return Hqx;
        yield return Htke;
        yield return Html;
        yield return Hvd;
        yield return Hvp;
        yield return Hvs;
        yield return I2g;
        yield return Icc;
        yield return Ice;
        yield return Ico;
        yield return Ics;
        yield return Ief;
        yield return Ifm;
        yield return Igl;
        yield return Igm;
        yield return Igs;
        yield return Igx;
        yield return Iif;
        yield return Imp;
        yield return Ims;
        yield return Ipfix;
        yield return Ipk;
        yield return Irm;
        yield return Irp;
        yield return Itp;
        yield return Ivp;
        yield return Ivu;
        yield return Jad;
        yield return Jam;
        yield return Jar;
        yield return Java;
        yield return Jisp;
        yield return Jlt;
        yield return Jnlp;
        yield return Joda;
        yield return Jpg;
        yield return Jpgv;
        yield return Jpm;
        yield return Js;
        yield return Json;
        yield return Karbon;
        yield return Kfo;
        yield return Kia;
        yield return Kml;
        yield return Kmz;
        yield return Kne;
        yield return Kon;
        yield return Kpr;
        yield return Ksp;
        yield return Ktx;
        yield return Ktz;
        yield return Kwd;
        yield return Lasxml;
        yield return Latex;
        yield return Lbd;
        yield return Lbe;
        yield return Les;
        yield return Link66;
        yield return Lrm;
        yield return Ltf;
        yield return Lvp;
        yield return Lwp;
        yield return M21;
        yield return M3u;
        yield return M3u8;
        yield return M4v;
        yield return Ma;
        yield return Mads;
        yield return Mag;
        yield return Mathml;
        yield return Mbk;
        yield return Mbox;
        yield return Mc1;
        yield return Mcd;
        yield return Mcurl;
        yield return Mdb;
        yield return Mdi;
        yield return Meta4;
        yield return Mets;
        yield return Mfm;
        yield return Mgp;
        yield return Mgz;
        yield return Mid;
        yield return Mif;
        yield return Mj2;
        yield return Mlp;
        yield return Mmd;
        yield return Mmf;
        yield return Mmr;
        yield return Mny;
        yield return Mods;
        yield return Movie;
        yield return Mp4;
        yield return Mp4;
        yield return Mp4a;
        yield return Mpc;
        yield return Mpeg;
        yield return Mpga;
        yield return Mpkg;
        yield return Mpm;
        yield return Mpn;
        yield return Mpp;
        yield return Mpy;
        yield return Mqy;
        yield return Mrc;
        yield return Mrcx;
        yield return Mscml;
        yield return Mseq;
        yield return Msf;
        yield return Msh;
        yield return Msl;
        yield return Msty;
        yield return Mts;
        yield return Mus;
        yield return Musicxml;
        yield return Mvb;
        yield return Mwf;
        yield return Mxf;
        yield return Mxl;
        yield return Mxml;
        yield return Mxs;
        yield return Mxu;
        yield return Ngage;
        yield return N3;
        yield return Nbp;
        yield return Nc;
        yield return Ncx;
        yield return Ngdat;
        yield return Nlu;
        yield return Nml;
        yield return Nnd;
        yield return Nns;
        yield return Nnw;
        yield return Npx;
        yield return Nsf;
        yield return Oa2;
        yield return Oa3;
        yield return Oas;
        yield return Obd;
        yield return Oda;
        yield return Odb;
        yield return Odc;
        yield return Odf;
        yield return Odft;
        yield return Odg;
        yield return Odi;
        yield return Odm;
        yield return Odp;
        yield return Ods;
        yield return Odt;
        yield return Oga;
        yield return Ogv;
        yield return Ogx;
        yield return Onetoc;
        yield return Opf;
        yield return Org;
        yield return Osf;
        yield return Osfpvg;
        yield return Otc;
        yield return Otf;
        yield return Otg;
        yield return Oth;
        yield return Oti;
        yield return Otp;
        yield return Ots;
        yield return Ott;
        yield return Oxt;
        yield return P;
        yield return P10;
        yield return P12;
        yield return P7b;
        yield return P7m;
        yield return P7r;
        yield return P7s;
        yield return P8;
        yield return Par;
        yield return Paw;
        yield return Pbd;
        yield return Pbm;
        yield return Pcf;
        yield return Pcl;
        yield return Pclxl;
        yield return Pcurl;
        yield return Pcx;
        yield return Pdb;
        yield return Pdf;
        yield return Pfa;
        yield return Pfr;
        yield return Pgm;
        yield return Pgn;
        yield return Pgp;
        yield return Pgp;
        yield return Pic;
        yield return Pjpeg;
        yield return Pki;
        yield return Pkipath;
        yield return Plb;
        yield return Plc;
        yield return Plf;
        yield return Pls;
        yield return Pml;
        yield return Png;
        yield return Png;
        yield return Png;
        yield return Pnm;
        yield return Portpkg;
        yield return Potm;
        yield return Potx;
        yield return Ppam;
        yield return Ppd;
        yield return Ppm;
        yield return Ppsm;
        yield return Ppsx;
        yield return Ppt;
        yield return Pptm;
        yield return Pptx;
        yield return Prc;
        yield return Pre;
        yield return Prf;
        yield return Psb;
        yield return Psd;
        yield return Psf;
        yield return Pskcxml;
        yield return Ptid;
        yield return Pub;
        yield return Pvb;
        yield return Pwn;
        yield return Pya;
        yield return Pyv;
        yield return Qam;
        yield return Qbo;
        yield return Qfx;
        yield return Qps;
        yield return Qt;
        yield return Qxd;
        yield return Ram;
        yield return Rar;
        yield return Ras;
        yield return Rcprofile;
        yield return Rdf;
        yield return Rdz;
        yield return Rep;
        yield return Res;
        yield return Rgb;
        yield return Rif;
        yield return Rip;
        yield return Rl;
        yield return Rlc;
        yield return Rld;
        yield return Rm;
        yield return Rmp;
        yield return Rms;
        yield return Rnc;
        yield return Rp9;
        yield return Rpss;
        yield return Rpst;
        yield return Rq;
        yield return Rs;
        yield return Rsd;
        yield return Rssxml;
        yield return Rtf;
        yield return Rtx;
        yield return S;
        yield return Saf;
        yield return Sbml;
        yield return Sc;
        yield return Scd;
        yield return Scm;
        yield return Scq;
        yield return Scs;
        yield return Scurl;
        yield return Sda;
        yield return Sdc;
        yield return Sdd;
        yield return Sdkm;
        yield return Sdp;
        yield return Sdw;
        yield return See;
        yield return Seed;
        yield return Sema;
        yield return Semd;
        yield return Semf;
        yield return Ser;
        yield return Setpay;
        yield return Setreg;
        yield return Sfdhdstx;
        yield return Sfs;
        yield return Sgl;
        yield return Sgml;
        yield return Sh;
        yield return Shar;
        yield return Shf;
        yield return Sis;
        yield return Sit;
        yield return Sitx;
        yield return Skp;
        yield return Sldm;
        yield return Sldx;
        yield return Slt;
        yield return Sm;
        yield return Smf;
        yield return Smi;
        yield return Snf;
        yield return Spf;
        yield return Spl;
        yield return Spot;
        yield return Spp;
        yield return Spq;
        yield return Src;
        yield return Sru;
        yield return Srx;
        yield return Sse;
        yield return Ssf;
        yield return Ssml;
        yield return St;
        yield return Stc;
        yield return Std;
        yield return Stf;
        yield return Sti;
        yield return Stk;
        yield return Stl;
        yield return Str;
        yield return Stw;
        yield return Sub;
        yield return Sus;
        yield return Sv4cpio;
        yield return Sv4crc;
        yield return Svc;
        yield return Svd;
        yield return Svg;
        yield return Swf;
        yield return Swi;
        yield return Sxc;
        yield return Sxd;
        yield return Sxg;
        yield return Sxi;
        yield return Sxm;
        yield return Sxw;
        yield return T;
        yield return Tao;
        yield return Tar;
        yield return Tcap;
        yield return Tcl;
        yield return Teacher;
        yield return Tei;
        yield return Tex;
        yield return Texinfo;
        yield return Tfi;
        yield return Tfm;
        yield return Thmx;
        yield return Tiff;
        yield return Tmo;
        yield return Torrent;
        yield return Tpl;
        yield return Tpt;
        yield return Tra;
        yield return Trm;
        yield return Tsd;
        yield return Tsv;
        yield return Ttf;
        yield return Ttl;
        yield return Twd;
        yield return Txd;
        yield return Txf;
        yield return Txt;
        yield return Ufd;
        yield return Umj;
        yield return Unityweb;
        yield return Uoml;
        yield return Uri;
        yield return Ustar;
        yield return Utz;
        yield return Uu;
        yield return Uva;
        yield return Uvh;
        yield return Uvi;
        yield return Uvm;
        yield return Uvp;
        yield return Uvs;
        yield return Uvu;
        yield return Uvv;
        yield return Vcd;
        yield return Vcf;
        yield return Vcg;
        yield return Vcs;
        yield return Vcx;
        yield return Vis;
        yield return Viv;
        yield return Vsd;
        yield return Vsdx;
        yield return Vsf;
        yield return Vtu;
        yield return Vxml;
        yield return Wad;
        yield return Wav;
        yield return Wax;
        yield return Wbmp;
        yield return Wbs;
        yield return Wbxml;
        yield return Weba;
        yield return Webm;
        yield return Webp;
        yield return Wg;
        yield return Wgt;
        yield return Wm;
        yield return Wma;
        yield return Wmd;
        yield return Wmf;
        yield return Wml;
        yield return Wmlc;
        yield return Wmls;
        yield return Wmlsc;
        yield return Wmv;
        yield return Wmx;
        yield return Wmz;
        yield return Woff;
        yield return Wpd;
        yield return Wpl;
        yield return Wps;
        yield return Wqd;
        yield return Wri;
        yield return Wrl;
        yield return Wsdl;
        yield return Wspolicy;
        yield return Wtb;
        yield return Wvx;
        yield return X3d;
        yield return Xap;
        yield return Xar;
        yield return Xbap;
        yield return Xbd;
        yield return Xbm;
        yield return Xdf;
        yield return Xdm;
        yield return Xdp;
        yield return Xdssc;
        yield return Xdw;
        yield return Xenc;
        yield return Xer;
        yield return Xfdf;
        yield return Xfdl;
        yield return Xhtml;
        yield return Xif;
        yield return Xlam;
        yield return Xls;
        yield return Xlsb;
        yield return Xlsm;
        yield return Xlsx;
        yield return Xltm;
        yield return Xltx;
        yield return Xml;
        yield return Xo;
        yield return Xop;
        yield return Xpi;
        yield return Xpm;
        yield return Xpr;
        yield return Xps;
        yield return Xpw;
        yield return Xslt;
        yield return Xsm;
        yield return Xspf;
        yield return Xul;
        yield return Xwd;
        yield return Xyz;
        yield return Yaml;
        yield return Yang;
        yield return Yin;
        yield return Zaz;
        yield return Zip;
        yield return Zir;
        yield return Zmm;
        yield return Aab;
        yield return Aac;
        yield return Aam;
        yield return Aas;
        yield return NA;
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }
}